create database egg_blog;

use egg_blog;

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `typeId` int(11) NOT NULL DEFAULT '0',
  `title` varchar(255) NOT NULL DEFAULT '',
  `content` text NOT NULL,
  `introduce` varchar(255) DEFAULT '',
  `viewCount` int(11) NOT NULL DEFAULT '0',
  `cover` varchar(255) DEFAULT '0',
  `likeCount` int(11) NOT NULL DEFAULT '0',
  `createTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `userId` int(11) DEFAULT '0',
  `tags` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=24 DEFAULT CHARSET=utf8 COMMENT='文章表';

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES ('2', '1', '【转】视觉体验和内容俱佳的优秀网页设计', '设计的灵感来源多种多样，不仅仅要了解别人的视觉设计，而且需要仔细体验实际的效果。许多优秀的网页设计作品，不仅仅有着突出的排版设计，而且在动效、交互、体验上有着颇为值得学习的地方。如果你愿意仔细揣摩，还能在许多网站当中学到细节的处理技巧和内容组合的搭配策略。想比起零散地设计作品，这些来自著名设计机构的网站，在不同需求下诞生的网站产品，更有价值。\n\n接下来，就在下面的20个网站中，尽情发掘你感兴趣的设计和内容吧！\n\n# [Epicurrence](https://www.epicurrence.com/ \"Epicurrence\")\n\n![](https://image.uisdc.com/wp-content/uploads/2018/08/01b-800x552.jpg)\n\n这个网站是一个为创意工作者所举办的 Epicurrence 2018 峰会，会议地点在著名的 Yosemite。整个网站在设计的时候，都采用了令人惊叹的插画和微妙的视差，让人会忍不住与之互动。\n\n# [Angelo Sanvito](http://www.angelosanvito.it/ \"Angelo Sanvito\")\n![](https://image.uisdc.com/wp-content/uploads/2018/08/02b-800x552.jpg)\n\nAngelo Sanvito 是一名来自意大利米兰的插画师，同样精通 UI 和 UX设计，他充分地利用了自己的诸多技能，在这个简单的网站上绘制了一系列著名艺术家的肖像，倒是颇为有趣。\n\n# [Atomize Design System](https://atomizedesign.com/ \"Atomize Design System\")\n![](https://image.uisdc.com/wp-content/uploads/2018/08/03b-800x552.jpg)\n\n# [Lisa & Ryan](https://www.lisaandryan.co/ \"Lisa & Ryan\")\n![](https://image.uisdc.com/wp-content/uploads/2018/08/04b-800x552.jpg)\n\n想在海量的设计机构当中找到一个适合你的品牌的，并不容易，不过 Lisa & Ryan 倒是非常称职，是个不错的选择。想知道为什么，不妨打开他们的网站看看。\n\n# [Bellvoye](https://www.lisaandryan.co/ \"Bellvoye\")\n![](https://image.uisdc.com/wp-content/uploads/2018/08/05b-800x552.jpg)\n\n\n最后测试一下代码高亮\n# 测试代码\n```\nimport React, { useState, useEffect } from \'react\'\nimport styles from \'./style.less\'\n\nconst LazyImg = (props) => {\n	const [done, setDone] = useState(false)\n	useEffect(() => {\n		const img = new Image();\n		// 发出请求，请求图片\n		img.src = props.src;\n		// 当图片加载完毕\n		img.onload = () => {\n			setDone(true)\n		}\n	}, [])\n\n	return (\n		<>\n			{\n				done\n					?\n					(\n						props.background ?\n							<div style={props.style, { backgroundImage: `url(${props.src})`}} className=\"item-background\"></div>\n							:\n							<img style={props.style} src={props.src} alt={props.alt} className=\"item-img\" />\n\n					)\n					:\n					<div className=\"clock\" />\n			}\n		</>\n	)\n}\n\nexport default LazyImg\n```\n\n最后测试一下公式\n $$\\prod 1\\sum$$\n', '设计的灵感来源多种多样，不仅仅要了解别人的视觉设计，而且需要仔细体验实际的效果。许多优秀的网页设计作品，不仅仅有着突出的排版设计，而且在动效、交互、体验上有着颇为值得学习的地方。', '70', 'http://cdn.lululuting.com/5471dd60-6532-11ea-9ef1-793305692a81', '26', '2020-01-07 00:24:11', '1', '设计,网页');
INSERT INTO `article` VALUES ('4', '1', '【转】2020年最值得关注的9个网页设计趋势', '想知道 2020 年网页设计的趋势吗？在今天的这篇文章当中，我们将会围绕着这一趋势进行说明。\n\n![](https://image.uisdc.com/wp-content/uploads/2019/12/Web-Design-Trends-2020.png)\n\n在即将到来的 2020 年，平面视觉和不断发展的新技术将会有更加深入的结合。只要我们稍加观察，就会注意到新技术对于现代网页设计的影响，这些正在生发的新东西会给你留下深刻的印象。网页设计师在尽量保持网页设计足够简约整洁的同时，还会注入更多新鲜的创意。\n\n另外，我们昨天还发布了 2020 年的平面和视觉设计趋势报告，如果你对此更感兴趣可以戳下方的链接访问：\n\n[![](https://image.uisdc.com/wp-content/uploads/2019/12/trend2020.jpg)](https://www.uisdc.com/graphic-design-trends-2020?zimu)\n\n\n下面，我们就具体来看看 2020 年的网页设计新趋势吧：\n\n# 1、图片和插画的组合\n\n目前网页设计中一个最重要的趋势，是将图片和简约的2D手绘插画结合到一起。这种结合方式，让充满真实感的图片和创意而相对抽象的图形元素之间构成互动，真实和虚拟的穿插是一种创意十足的穿插，让人难以忘怀。\n\n![](https://image.uisdc.com/wp-content/uploads/2019/12/Web-design-Trends-2020-forwardyou-photo-and-illustration.jpg)\n\n# 2、网页设计中的图案纹理\n\n图案纹理将会在 2020 年卷土重来，并且带来更加多样化和耳目一新的视觉观感。除了我们以往常见的覆盖整个背景的纹理，更多的纹理是以更加微妙、 零散的方式分布在网页各个角落，这种方式将会越来越流行。这种方式，将会带来更多富有创意的网页设计。\n\n![](https://image.uisdc.com/wp-content/uploads/2019/12/Web-design-Trends-2020-simpleasmilk-pattern-background-in-website.jpg)\n\n# 3、永不过时的黑白设计\n\n经典的黑白灰是设计领域的常青树。这也是为什么我们经常能够在以往的设计报告中看到黑白色调的影子。黑白色的网站上优雅而极简的，其中包含简约的版式，还有充满艺术感的设计元素。\n\n![](https://image.uisdc.com/wp-content/uploads/2019/12/Web-design-Trends-2020-jurajmolnar-black-and-white-style-website.jpg)\n\n\n', '想知道 2020 年网页设计的趋势吗？在今天的这篇文章当中，我们将会围绕着这一趋势进行说明。', '39', 'http://cdn.lululuting.com/63934ef0-6532-11ea-9ef1-793305692a81', '45', '2020-01-19 10:16:58', '1', '');
INSERT INTO `article` VALUES ('5', '1', '【转】让Banner 的文本标题快速具有形式感', '![](https://image.uisdc.com/wp-content/uploads/2018/11/uisdc-banner-20181130-3.jpg)\n\n这9种方法可以让 Banner 中的文本标题快速具有形式感。\n\n# 一、将图片元素作为文字一部分\n\n![](https://image.uisdc.com/wp-content/uploads/2018/11/uisdc-ys-20181129-6.jpg)\n\n# 二、沿着图片背景元素走向排布\n\n![](https://image.uisdc.com/wp-content/uploads/2018/11/uisdc-ys-20181129-2.jpg)\n\n\n# 三、用不同色彩穿插搭配\n\n![](https://image.uisdc.com/wp-content/uploads/2018/11/uisdc-ys-20181129-3.jpg)\n\n\n# 四、用类似风格的字体搭配组合\n\n![](https://image.uisdc.com/wp-content/uploads/2018/11/uisdc-ys-20181129-4.jpg)\n\n# 五、使用装饰性辅助元素\n![](https://image.uisdc.com/wp-content/uploads/2018/11/uisdc-ys-20181129-5.jpg)\n\n\n# 六、分栏式布局+剪切蒙板\n\n![](https://image.uisdc.com/wp-content/uploads/2018/11/uisdc-ys-20181129-1.jpg)\n\n\n# 七、用纯镂空效果融入背景\n\n![](https://image.uisdc.com/wp-content/uploads/2018/11/uisdc-ys-20181129-7.jpg)\n\n# 八、同一字体虚实结合营造对比\n\n![](https://image.uisdc.com/wp-content/uploads/2018/11/uisdc-ys-20181129-8.jpg)\n\n\n# 九、字体和图片元素穿插使用\n![](https://image.uisdc.com/wp-content/uploads/2018/11/uisdc-ys-20181129-9.jpg)\n\n', '这9种方法可以让 Banner 中的文本标题快速具有形式感。一、分栏式布局+剪切蒙板 二、沿着图片背景元素走向排布 三、用不同色彩穿插搭配 四、用类似风格的字体搭配。', '120', 'http://cdn.lululuting.com/85eaa8e0-6532-11ea-9ef1-793305692a81', '17', '2020-01-21 21:47:34', '1', 'banner');
INSERT INTO `article` VALUES ('7', '1', 'react ssr服务端渲染框架 next入门', 'Next.js 是一个轻量级的 React 服务端渲染应用框架。。。。。屁话不多说直接进入教程：\n\n\n## 创建项目\n和普通react项目用create-react-app脚手架创建一样，next也有一个`create-next-app`脚手架。\n\n1.使用脚手架前，需要先进行全局安装。\n```\nnpm install -g create-next-app\n```\n2.使用脚手架创建项目\n```\nnpm create-next-app next-create\n```\n浏览器中输入 http://localhost:3000/ ,看到有东西了，就说明成功了。\n\n## 项目结构介绍\n- components文件夹:这里是专门放置自己写的组件的，这里的组件不包括页面，指公用的或者有专门用途的组件。\n- node_modules文件夹：Next项目的所有依赖包都在这里，一般我们不会修改和编辑这里的内容。\n- pages文件夹：这里是放置页面的，这里边的内容会自动生成路由，并在服务器端渲染，渲染好后进行数据同步。\n- static文件夹： 这个是静态文件夹，比如项目需要的图片、图标和静态资源都可以放到这里。\n- .gitignore文件： 这个主要是控制git提交和上传文件的，简称就是忽略提交。\n- package.json文件：定义了项目所需要的文件和项目的配置信息（名称、版本和许可证），最主要的是使用npm install 就可以下载项目所需要的所有包。\n\n\n## 构建页面\n\n首先Next.js默认是不支持CSS文件的，它用的是`style jsx`。\n`style jsx`用法：\n```\nimport Layout from \'../components/MyLayout.js\'\nimport Link from \'next/link\'\n\nfunction getPosts() {\n  return [\n    { id: \'hello-nextjs\', title: \'Hello Next.js\' },\n    { id: \'learn-nextjs\', title: \'Learn Next.js is awesome\' },\n    { id: \'deploy-nextjs\', title: \'Deploy apps with ZEIT\' }\n  ]\n}\n\nexport default function Blog() {\n  return (\n    <Layout>\n      <h1>My Blog</h1>\n      <ul>\n        {getPosts().map(post => (\n          <li key={post.id}>\n            <Link as={`/p/${post.id}`} href={`/post?title=${post.title}`}>\n              <a>{post.title}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <style jsx>{`\n        h1,\n        a {\n          font-family: \'Arial\';\n        }\n\n        ul {\n          padding: 0;\n        }\n\n        li {\n          list-style: none;\n          margin: 5px 0;\n        }\n\n        a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        a:hover {\n          opacity: 0.6;\n        }\n      `}</style>\n    </Layout>\n  )\n}\n注意<style jsx>后面跟的是模板字符串，而不是直接写样式。\n```\n\n也就是说next不能直接引入css, 像这样子 `import ./style.css` 什么的是会报错的。\n应该这么玩>>>\n\n首先要对next进行配置，让Next.js支持CSS文件。\n1，先安装`@zeit/next-css`包，有了这个包Next.js才可以加载CSS文件。\n2，在`根目录`下建立一个`next.config.js`的js文件，这个就是Next.js的总配置文件。\n3，next.config.js里面写上下面这些东西，就是引入next-css的包让他支持css。（框架的东西不用记，会抄就好）。\n```\nconst withCss = require(\'@zeit/next-css\')\nif(typeof require !== \'undefined\'){\n    require.extensions[\'.css\']=file=>{}\n}\nmodule.exports = withCss({})\n```\n上面三步搞好，这样子css可以被引入了。不过只是css，对于我们这种写惯了`less、sass`的人还是满足不了。当然，官网也有写less sass 怎么配置的，百度一下就有。\n\n然后 next的入口文件`App.js` `Document.js`这些都是没有的，如果需要，可以自己自定义 `./pages/_app.js`和 `./pages/_document.js`。\n\n\n`./pages/_app.js`\n```\nimport App, {Container} from \'next/app\'\nimport React from \'react\'\n\nexport default class MyApp extends App {\n  static async getInitialProps ({ Component, router, ctx }) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return {pageProps}\n  }\n\n  render () {\n    const {Component, pageProps} = this.props\n    return <Container>\n      <Component {...pageProps} />\n    </Container>\n  }\n}\n```\n\n\n\n`./pages/_document.js`\n\n```\n// _document is only rendered on the server side and not on the client side\n// Event handlers like onClick can\'t be added to this file\n\nimport Document, { Head, Main, NextScript } from \'next/document\'\n\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const initialProps = await Document.getInitialProps(ctx)\n    return { ...initialProps }\n  }\n\n  render() {\n    return (\n      <html>\n        <Head>\n          <style>{`body { margin: 0 } /* custom! */`}</style>\n        </Head>\n        <body className=\"custom_class\">\n          <Main />\n          <NextScript />\n        </body>\n      </html>\n    )\n  }\n}\n```\n钩子getInitialProps接收到的参数ctx对象都是一样的,回调函数renderPage是会执行 React 渲染逻辑的函数(同步),这种做法有助于此函数支持一些类似于 Aphrodite 的 renderStatic 等一些服务器端渲染容器。\n另外注意：`<Main />`外的 React 组件将不会渲染到浏览器中，所以那添加应用逻辑代码。如果你页面需要公共组件（菜单或工具栏），可以参照上面说的App组件代替。\n\n\nNext中，有一个默认组件error.js，负责处理404或者500这种错误。当然，你也可以自定义一个_error.js组件覆盖默认的错误处理组件：\n\n```\n// _error.js\n\nimport React from \'react\'\nexport default class Error extends React.Component {\n  static getInitialProps ({ res, xhr }) {\n    const statusCode = res ? res.statusCode : (xhr ? xhr.status : null)\n    return { statusCode }\n  }\n\n  render () {\n    return (\n      <p>{\n        this.props.statusCode\n        ? `An error ${this.props.statusCode} occurred on server`\n        : \'An error occurred on client\'\n      }</p>\n    )\n  }\n}\n```\n\n除了这些要注意外，其他写法跟平时写react没多大区别。\n\n\n## 路由配置\nnext的路由是没有配置的，全自动的。在page文件夹下 `文件就是就是路由`，一个文件夹就代表一层，要想嵌套就写深几个文件夹！比如说，\n现在要作一个更深的页面，比如把有关博客的界面都放在这样的路径下 http://localhost:3000/blog/nextBlog, 其实只要在pages文件夹下再建立一个新的文件夹blog，然后进入blog文件夹，新建一个nextBlog.js文件，就可以实现了。\n\n要注意的点是：\n1.最好page用小写，因为地址栏一般都是小写的，如果page写了大写，再去地址栏输入小写是找不到路由的。\n2.最好采用 `文件夹名/index.js` 来开发，命名规范统一，不易混淆！\n\n## 路由跳转\nnext页面跳转一般有两种形式:\n第一种是利用标签`<Link>`,\n第二种是用js编程的方式进行跳转，也就是利用`Router`组件\n(差不多所有框架都是这样)\n\n一.`<Link>`方式跳转页面：\n```\nimport Link from \'next/link\'\nexport default ()=>(\n    <>\n        <Link href=\"/info\"><a>点击1</a></Link>\n		<Link href=\"/info?id=123\"><a>点击2</a></Link>\n		<Link href={{pathname:\'/info\', query:{id:\'123\'}}}><a>点击3</a></Link>\n\n		/* Link内需要a标签，不然爬虫识别不了，不用a可以加passHref，提高爬虫识别率 */\n		<Link href=\"/info\" passHref>\n		   <Button type=\"primary\">点击4</Button>\n		</Link>\n\n    </>\n)\n```\n注意 ：\n1.`<Link>`中只能通过通过`query（?id=1）`来传递参数，而不能通过`(path:id)`的形式传递参数\n\n\n接收参数\n```\nimport { withRouter} from \'next/router\'\nimport Link from \'next/link\'\nconst page = ({router})=>{\n    return (\n        <>\n            <div>{router.query.id}</div>\n        </>\n    )\n}\n\nexport default withRouter(page)\n```\n\n\n\n二.`Router` 方式跳转页面：\n\n```\nimport Router from \'next/router\'\n\n// 方式1\ncosnt link1 = () =>{\n	Router.push({\n		pathname:\'/info\',\n			query:{\n			id:123\n		}\n	})\n}\n\n// 方式2\ncosnt link2 = () =>{\n	Router.push(\'/info?id=123\')\n}\n\nconst page = ()=>{\n    return (\n        <>\n            <div onClick={link1}>点击1</div>\n			<div onClick={link2}>点击1</div>\n        </>\n    )\n}\n\nexport default withRouter(page)\n```\n\n\n## 路由钩子\nnext的路由钩子事件，也就是当路由发生变化时，可以监听到这些变化事件，执行对应的函数。它一共有六个钩子事件：\n\n```\n  Router.events.on(\'routeChangeStart\',(...args)=>{\n    console.log(\'1.routeChangeStart->路由开始变化,参数为:\',...args)\n  })\n\n  Router.events.on(\'routeChangeComplete\',(...args)=>{\n    console.log(\'2.routeChangeComplete->路由结束变化,参数为:\',...args)\n  })\n\n  Router.events.on(\'beforeHistoryChange\',(...args)=>{\n    console.log(\'3,beforeHistoryChange->在改变浏览器 history之前触发,参数为:\',...args)\n  })\n\n  Router.events.on(\'routeChangeError\',(...args)=>{\n    console.log(\'4,routeChangeError->跳转发生错误,参数为:\',...args)\n  })\n\n  Router.events.on(\'hashChangeStart\',(...args)=>{\n    console.log(\'5,hashChangeStart->hash跳转开始时执行,参数为:\',...args)\n  })\n\n  Router.events.on(\'hashChangeComplete\',(...args)=>{\n    console.log(\'6,hashChangeComplete->hash跳转完成时,参数为:\',...args)\n  })\n\n```\n\n## 发送数据请求\nNext.js框架中提供了`getInitialProps` 静态方法用来获取远端数据，一个页面组件只要把访问 API 外部资源的代码放在 getInitialProps 中就足够，其余的不用管，Next.js 自然会在服务器端或者浏览器端调用 getInitialProps 来获取外部资源，并把外部资源以 props 的方式传递给页面组件。\n\n![avatar](http://cdn.lululuting.com/6314a1b0-6535-11ea-9ef1-793305692a81)\n\n## 模块懒加载\n\nNext.js提供LazyLoading用来做“懒加载”.\n它一般分为两种情况，一种是懒加载（或者说是异步加载）模块，另一种是异步加载组件。\n\n懒加载用法：\n\n```\nimport React, {useState} from \'react\'\n//删除import moment\nfunction Time(){\n    const [nowTime,setTime] = useState(Date.now())\n    const changeTime= async ()=>{ //把方法变成异步模式\n        const moment = await import(\'moment\') //等待moment加载完成\n        setTime(moment.default(Date.now()).format()) //注意使用defalut\n    }\n    return (\n        <>\n            <div>显示时间为:{nowTime}</div>\n            <div><button onClick={changeTime}>改变时间格式</button></div>\n        </>\n    )\n}\nexport default Time\n\n// 按F12，看一下Network标签，当我们点击按钮时，才会加载1.js,它就是momnet.js的内容。\n```\n\n懒加载自定义组件：\n```\nimport React, {useState} from \'react\'\nimport dynamic from \'next/dynamic\'\n\nconst One = dynamic(import(\'../components/one\'))\n\nfunction Time(){\n    const [nowTime,setTime] = useState(Date.now())\n    const changeTime= async ()=>{\n        const moment = await import(\'moment\')\n        setTime(moment.default(Date.now()).format())\n    }\n    return (\n        <>\n            <div>显示时间为:{nowTime}</div>\n            <One/>\n            <div><button onClick={changeTime}>改变时间格式</button></div>\n        </>\n    )\n}\nexport default Time\n\n// 只有在jsx里用到<One/>时，才会被加载进来，如果不使用就不会被加载。\n```\n\n## SEO 优化\nnext的核心seo，都是奔着seo来的 不然谁用它？\n语法很简单 `<Head>`里面放需要seo优化的meta标签之类的。可以每个页面用，或抽成一个高阶组件统一调用。随便玩。\n```\nimport Head from \'next/head\'\nfunction Header(){\n    return (\n        <>\n            <Head>\n                <title>首页</title>\n                <meta charSet=\'utf-8\' />\n            </Head>\n            <div>123</div>\n        </>\n    )\n}\nexport default Header\n```\n\n## 打包部署\n```\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"build\": \"next build\",\n    \"start\": \"next start\"\n  },\n```\n\n开发环境（本地开发时） `npm run dev`\n生产环境（部署服务器）整个文件丢到服务器再 `cnmp i` + `npm run build `然后 `pm2 start npm -- run start`\n(pm2是一个进程管理工具,可以用它来管理你的node进程，并查看node进程的状态，当然也支持性能监控，进程守护，负载均衡等功能)\n\n好，基础使用就这样子，下面说一下 实际上在开发中遇到的问题。\n\n\n## 开发小结\n\n** Ant Design 引入\n\n既然用的是`react`，那`Ant Design`引入是必不可少的。\n首先引入包，`babel-plugin-import`是antd提供的按需引入插件。\n```\ncnpm i antd babel-plugin-import -S\n```\n装完成后，在项目根目录建立`.babelrc`文件，然后写入如下配置文件（`.babelrc`文件，前面.没有打错哦）。\n `style\": true` true是代表开启antd的css也按需加载，但这里的按需加载有问题的，ntxt版本更的太快了，与antd冲突了，css并没有按需加载，到目前为止antd和next都没有修复这个bug，网上有人说通过写死next的版本号，引入稳定版则可以解决这个问题。都2020年antd4.0都出了，我就没有去尝试过了。。。\n```\n{\n    \"presets\":[\"next/babel\"],  //Next.js的总配置文件，相当于继承了它本身的所有配置\n    \"plugins\":[     // 这个插件就是让antd可以按需引入，包括CSS\n		 // 让我们可以使用根路径，避免相对路径的混乱，如import Head from \'@/components/Head\'\n		[\n		  \"module-resolver\",\n		  {\n			\"alias\": {\n			  \"@\": \"./\"\n			}\n		  }\n		],\n		// 按需加载并且可以使用less的配置\n        [\n            \"import\",\n            {\n                \"libraryName\":\"antd\",\n                 // \"style\": true  //注释掉是因为打包会出错，或者干脆别写这一行，没有删掉留着是给antd和next一个改过的机会\n            }\n        ]\n    ]\n}\n```\n\n既然css没有按需加载了，那就新建./pages/_app.js文件，重写 App 模块如下所示。这里可以引入一下公共的样式,要注意的是 这里的样式是全局的 也就是`全局引入`。\n```\nimport App from \'next/app\'\nimport \'antd/dist/antd.less\'\nimport \'../public/style/global.less\'\nexport default App\n```\n\n如果是单纯的想用用antd这样子就可以了，但是想`自定义配置主题`什么的那得这么玩>>>\n`less-vars-to-js @zeit/next-less @zeit/next-css webpack-filter-warnings-plugin`这些都是需要安装的\n`下面配置支持css和less文件引入`\n\n```\n// 这里是 next.config.js\n\nconst WithCss = require(\'@zeit/next-css\');\nconst withLess = require(\"@zeit/next-less\");\nconst lessToJS = require(\"less-vars-to-js\");\nconst fs = require(\'fs\');\nconst path = require(\'path\');\nconst FilterWarningsPlugin = require(\'webpack-filter-warnings-plugin\'); //安装webpack-filter-warnings-plugin进行webpack 配置,可以忽视掉 chunk styles [mini-css-extract-plugin]的警告\n\n\n// 主题配置\nconst themeVariables = lessToJS(\n  fs.readFileSync(path.resolve(__dirname, \"./public/style/modifyVars.less\"), \"utf8\") // ./public/style/modifyVars.less 就是新建在这个文件夹下面自定义的less文件\n);\n// fix: prevents error when .less files are required by node\nif (typeof require !== \"undefined\") {\n  require.extensions[\".less\"] = file => {};\n}\n\n\nmodule.exports = withLess(\n  WithCss({\n    lessLoaderOptions: {\n      javascriptEnabled: true,\n      modifyVars: themeVariables,\n      localIdentName: \"[local]___[hash:base64:5]\"\n    },\n    distDir: \'build\',\n    generateEtags: false,\n    generateBuildId: async () => {\n      return \'build-\' + Date.now();\n    },\n    webpack: (config) => {\n      config.plugins.push(\n        new FilterWarningsPlugin({\n          exclude: /mini-css-extract-plugin[^]*Conflicting order between:/,\n        })\n      );\n      return config;\n    }\n  })\n);\n\n```\n\n** 开发环境css不加载的问题\n\nnext.config.js是next.js官方为开发者提供个性化配置文件。 静态资源服务有点小坑，img引入url直接链接static 这是没问题的，但是背景图片引入的时候有时候会无法解析，但有时候又可以，另外就是在开发模式下，新路由页面不能及时加载样式文件渲染，再次刷新就可以了，当然在生产环境中，这个问题是没有的，就是这么抽风！！！\n\n\n** 关于本地资源的引用\n\n平时写惯了`./img`这种写法来引入静态资源，但是在next里面是不行的，静态资源要放到根目录的`static`文件下直接`/static/xxx`这样引用!\n\n\n-----------暂时就先这么多，后面遇到了就继续补充(￣▽￣)／-------------\n\n\n', 'next react服务端渲染框架开发记录', '78', 'http://cdn.lululuting.com/9623c4a0-6535-11ea-9ef1-793305692a81', '2', '2020-03-09 20:45:16', '1', 'react,ssr');
INSERT INTO `article` VALUES ('8', '3', '零点生活', '你好，今天，今天你是二零贰零年三月九号。今天你过得怎么样？说的是有小雨，可是没有下雨哦，惊喜不:first_quarter_moon_with_face: :fa-pencil-square-o:', '光阴 真是一个经不起浪费的东西呀', '36', 'http://cdn.lululuting.com/2561ad70-6532-11ea-9ef1-793305692a11', '6', '2020-03-09 22:26:42', '2', '');
INSERT INTO `article` VALUES ('9', '2', '旅行记录 2019.04.06 清明 东莞之旅', '<iframe src=\"//player.bilibili.com/player.html?aid=48783349&cid=85428759&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>', '2019.04.06 清明 东莞可园', '16', 'http://cdn.lululuting.com/4013dc90-65de-11ea-9951-f3da136c56eb', '0', '2020-03-13 23:18:59', '1', '东莞,可园');
INSERT INTO `article` VALUES ('10', '2', '旅行记录 2019.06 端午 东莞之旅', '<iframe src=\"//player.bilibili.com/player.html?aid=55780982&cid=97513017&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>', '2019.06 端午 东莞之旅，没错有去东莞耍啦！', '19', 'http://cdn.lululuting.com/334d6770-65dd-11ea-9951-f3da136c56eb', '0', '2020-03-13 23:25:35', '1', '东莞');
INSERT INTO `article` VALUES ('11', '2', '2019.05.18 3R夜行广州城市穿越赛', '<iframe src=\"//player.bilibili.com/player.html?aid=53028097&cid=92775730&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n', '2019.05.18， 永泰兵乓球公园， 东山口4号补给点 ，天河体育中心。', '18', 'http://cdn.lululuting.com/54ca4de0-6543-11ea-83fa-9d2fd7c52f28', '0', '2020-03-13 23:57:25', '1', '3R夜跑,马拉松');
INSERT INTO `article` VALUES ('12', '2', '2019.06 广州 延迟摄影', '<iframe src=\"//player.bilibili.com/player.html?aid=57410978&cid=100232484&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>', '朋友圈拍天桥狂魔.', '23', 'http://cdn.lululuting.com/502134c0-65de-11ea-9951-f3da136c56eb', '2', '2020-03-14 00:03:32', '1', '广州,延迟摄影');
INSERT INTO `article` VALUES ('13', '2', '旅行记录 2019.07.05 桂林', '<iframe src=\"//player.bilibili.com/player.html?aid=60362637&cid=105075249&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>', '有句话怎么说来着~(´･_･`) 桂林米粉甲天下！', '30', 'http://cdn.lululuting.com/70dfcba0-65f1-11ea-a4b4-691a2c07bea6', '3', '2020-03-14 00:06:31', '1', '桂林,旅游');
INSERT INTO `article` VALUES ('14', '2', '2020.02 春节 家', '<iframe src=\"//player.bilibili.com/player.html?aid=92015582&cid=157112076&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>', '2020.02  超长假期，在家的日子。', '65', 'http://cdn.lululuting.com/62467070-65de-11ea-9951-f3da136c56eb', '9', '2020-03-14 00:28:59', '1', '星空,家');
INSERT INTO `article` VALUES ('15', '1', '常用 utils 工具', '![avatar](http://cdn.lululuting.com/709096a0-71d8-11ea-9ba6-fdf6f3c40acb)\n\n工欲善其事必先利其器，封装一些常用的方法很有必要。以下是我辛辛苦苦从各大网站 论坛 `整理`出来的一些常用方法，希望有点用吧。持续更新————\n\n# 通用类\n\n## 截取指定字节数的字符串\n```\n/**\n * 截取指定字节的字符串\n * @param str 要截取的字符穿\n * @param len 要截取的长度，根据字节计算\n * @param suffix 截取前len个后，其余的字符的替换字符，一般用“…”\n * @returns {*}\n */\nfunction cutString(str, len, suffix) {\n  if (!str) return \"\";\n  if (len <= 0) return \"\";\n  if (!suffix) suffix = \"\";\n  var templen = 0;\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) > 255) {\n      templen += 2;\n    } else {\n      templen++\n    }\n    if (templen == len) {\n      return str.substring(0, i + 1) + suffix;\n    } else if (templen > len) {\n      return str.substring(0, i) + suffix;\n    }\n  }\n  return str;\n}\n```\n\n\n## 对象克隆&深拷贝\n```\n/**\n * 对象克隆&深拷贝\n * @param obj\n * @returns {{}}\n */\nfunction cloneObj(obj) {\n  var newO = {};\n  if (obj instanceof Array) {\n    newO = [];\n  }\n  for (var key in obj) {\n    var val = obj[key];\n    newO[key] = typeof val === \'object\' ? arguments.callee(val) : val;\n  }\n  return newO;\n};\n```\n\n\n## cookie操作\n```\n//写cookies\nsetCookie = function(name, value, time) {\n  var strsec = getsec(time);\n  var exp = new Date();\n  exp.setTime(exp.getTime() + strsec * 1);\n  document.cookie = name + \"=\" + escape(value) + \";expires=\" + exp.toGMTString();\n}\n//cookie操作辅助函数\ngetsec = function(str) {\n  var str1 = str.substring(1, str.length) * 1;\n  var str2 = str.substring(0, 1);\n  if (str2 == \"s\") {\n    return str1 * 1000;\n  } else if (str2 == \"h\") {\n    return str1 * 60 * 60 * 1000;\n  } else if (str2 == \"d\") {\n    return str1 * 24 * 60 * 60 * 1000;\n  }\n}\n//读取cookies\ngetCookie = function(name) {\n  var arr, reg = new RegExp(\"(^| )\" + name + \"=([^;]*)(;|$)\");\n  if (arr = document.cookie.match(reg)) return (arr[2]);\n  else return null;\n}\n\n//删除cookies\ndelCookie = function(name) {\n  var exp = new Date();\n  exp.setTime(exp.getTime() - 1);\n  var cval = getCookie(name);\n  if (cval != null) document.cookie = name + \"=\" + cval + \";expires=\" + exp.toGMTString();\n}\n```\n\n\n## Rem移动端适配\n```\nvar rem = {\n  baseRem: 40,\n  // 基准字号，按照iphone6应该为20，此处扩大2倍，便于计算\n  baseWidth: 750,\n  // 基准尺寸宽，此处是按照ihpone6的尺寸\n  rootEle: document.getElementsByTagName(\"html\")[0],\n  initHandle: function() {\n    this.setRemHandle();\n    this.resizeHandle();\n  },\n  setRemHandle: function() {\n    var clientWidth = document.documentElement.clientWidth || document.body.clientWidth;\n    this.rootEle.style.fontSize = clientWidth * this.baseRem / this.baseWidth + \"px\";\n  },\n  resizeHandle: function() {\n    var that = this;\n    window.addEventListener(\"resize\",\n    function() {\n      setTimeout(function() {\n        that.setRemHandle();\n      },\n      300);\n    });\n  }\n};\nrem.initHandle();\n```\n\n\n## 动态加载JS\n```\nfunction loadScript(url, callback) {\n  var script = document.createElement(\"script\");\n  script.type = \"text/\";\n  if (typeof(callback) != \"undefined\") {\n    if (script.readyState) {\n      script.onreadystatechange = function() {\n        if (script.readyState == \"loaded\" || script.readyState == \"complete\") {\n          script.onreadystatechange = null;\n          callback();\n        }\n      };\n    } else {\n      script.onload = function() {\n        callback();\n      };\n    }\n  }\n  script.src = url;\n  document.body.appendChild(script);\n}\n```\n\n\n## 移动端H5播放音乐处理，兼容微信端\n```\n/**\n  * 移动端H5播放音乐处理，兼容微信端\n  * @param el 音乐Audio元素\n  */\nfunction playMusic(el) {\n    var b = document.getElementById(el);\n\n    var c = function c() {\n        b.play();\n        document.removeEventListener(\"touchstart\", c, true);\n    };\n\n    b.play();\n    document.addEventListener(\"WeixinJSBridgeReady\", function () {\n        c();\n    }, false);\n    document.addEventListener(\"YixinJSBridgeReady\", function () {\n        c();\n    }, false);\n    document.addEventListener(\"touchstart\", c, true);\n}\n```\n\n\n## 获取类型 => toType\n```\n/**\n * 返回检测类型\n * @param {*} value - 要被检测类型的数据\n * @returns {String}\n */\nexport function toType(value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n```\n\n\n## h5-blob 下载文件 => downloadFile\n```\n/**\n * h5-blob下载文件\n * @export\n * @param {Object} data - 流内容\n * @param {String} name - 文件名\n * @param {String} type - 文件MimeType\n */\nexport function downloadFile(data, name, type) {\n  const blob = type ? new Blob([data], { \'type\': type }) : new Blob([data])\n  const downloadElement = document.createElement(\'a\')\n  const href = window.URL.createObjectURL(blob) // 创建下载的链接\n  downloadElement.href = href\n  downloadElement.download = name // 下载后文件名\n  document.body.appendChild(downloadElement)\n  downloadElement.click() // 点击下载\n  document.body.removeChild(downloadElement) // 下载完成移除元素\n  window.URL.revokeObjectURL(href) // 释放掉blob对象\n}\n```\n\n\n## 解析下载流文件的信息(axios) => getSteamFileInfo\n```\n/**\n * 解析下载流文件的信息\n * @param {Object} response - 返回体\n * @returns {Object} { name, type }\n */\nexport function getSteamFileInfo(response) {\n  let name = response.headers[\'content-disposition\']\n  name = name.split(\';\')\n  name = name.find(e => ~e.indexOf(\'filename\'))\n  if (name) {\n    name = decodeURIComponent(name.split(\'=\')[1])\n  }\n  return name || \'未命名文件\'\n}\n```\n\n## 生成一个指定位数的随机数 => rndNum\n```\n/**\n * 生成一个指定位数的随机数\n * @export\n * @param {Number} n - 位数\n * @returns\n */\nexport function rndNum(n) {\n  let rnd = \'\'\n  for (var i = 0; i < n; i++) {\n    rnd += Math.floor(Math.random() * 10)\n  }\n  return rnd\n}\n```\n\n\n## 自动控制 promise => autoLoading to\n\n```\n/**\n * 自动控制loading\n * @param {Object} context - 源对象的上下文\n * @param {[String, Array]} loading - key\n * @param {Boolean} is - true/false\n * @param {Object} self - this的上下文\n */\nconst autoLoading = (context, loading, is, self) => {\n  // 如果没传上下文时，则不用操作loading\n  if (!context || toType(context) !== \'Object\') return\n\n  // !请求记录，是为了防止axios有检测重复请求时，当上一个请求检测重复时，这里会关闭loading\n  // !所以这里检测当关闭loading时，则remove本身的context，然后继续检测还有没有上一个相同的context时\n  // !有的话，则不用关闭，直接return\n  // !只有当最后一个context则才会关闭loading\n\n  // 如果是开启loading则记一个请求记录\n  autoLoading.pending = autoLoading.pending || []\n  if (is) {\n    autoLoading.pending.push(context)\n  }\n\n  // 判断是否有存在过上下文\n  const isExistContext = (pending, context) => {\n    return pending.findIndex(e => e === context)\n  }\n\n  // loading开关\n  const handleLoading = (context, loading, is, self) => {\n    if (!is) {\n      // 当关闭的时候销毁自身请求记录\n      autoLoading.pending.splice(isExistContext(autoLoading.pending, context), 1)\n\n      // 再次判断还有存在上下文\n      // 如果有，则说明上一个请求还在ing中，那么就不用关闭\n      // 否则，则正常流程走\n      const isExist = !!~isExistContext(autoLoading.pending, context)\n      if (isExist) return\n    }\n    if (self) {\n      self.$set(context, loading, is)\n    } else {\n      if (context[loading] !== undefined) context[loading] = is\n    }\n  }\n\n  if (Array.isArray(loading)) {\n    loading.forEach(e => {\n      handleLoading(context, e, is, self)\n    })\n  } else {\n    handleLoading(context, loading, is, self)\n  }\n}\n\n/**\n * 局部请求接口进行统一处理，支持单个/多个方法\n * @param {[Promise, Array]} promise - 异步方法\n * @param {Object} context - 源对象的上下文\n * @param {[String, Array]} - 要设置loading的key\n * @param {Object} self - this的上下文\n * @param {String} promiseMethod - promise原型链方法\n */\nexport const to = (method, context, loading = \'loading\', self, promiseMethod = \'all\') => {\n  if (toType(method) !== \'Array\') method = [method]\n  // await this.$to(method)\n  // 开启loading\n  autoLoading(context, loading, true, self)\n  return Promise[promiseMethod](method)\n    .then(res => [null, ...res])\n    .catch(err => [err])\n    .finally(() => {\n      // 关闭loading\n      autoLoading(context, loading, false, self)\n    })\n}\n```\n使用\n```\nexport default {\n  data() {\n    return {\n      loading: false\n    }\n  },\n  methods: {\n    // 一个请求数据的方法\n    async getData() {\n      const [err, res] = await to(\n        axios(url), // axios返回promise结果\n        this\n      )\n      console.log(err, res)\n    }\n  }\n}\n```\n\n## 字符串占位符替换 => stringFormat\n```\n/**\n * 字符串占位符替换\n * @export\n * @param {String} str - 待替换的字符串\n * @param {Array} args\n */\nexport function stringFormat(str, ...args) {\n  if (!args.length) return str\n\n  for (let i = 0; i < args.length; i++) {\n    str = str.replace(new RegExp(\'\\\\{\' + i + \'\\\\}\', \'g\'), args[i] || i)\n  }\n  return str\n}\n```\n\n\n## 生成指定范围的随机数 => randomNum\n```\n/**\n * 生成指定范围的随机数\n * @export\n * @param {Number} minNum - 最小值\n * @param {Number} maxNum - 最大值\n * @returns\n */\nexport function randomNum(minNum, maxNum) {\n  switch (arguments.length) {\n    case 1:\n      return parseInt(Math.random() * minNum + 1, 10)\n    case 2:\n      return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10)\n    default:\n      return 0\n  }\n}\n```\n\n\n## 图片转为 base64 => getBase64\n```\n/**\n * 图片转为base64\n * @param {String} src - 图片url\n */\nexport function getBase64(src) {\n  return new Promise((resolve, reject) => {\n    const image = new Image()\n    image.setAttribute(\'crossOrigin\', \'Anonymous\')\n    image.src = src\n    image.onload = ({ target }) => {\n      const canvas = document.createElement(\'canvas\')\n      canvas.width = target.width\n      canvas.height = target.height\n      const ctx = canvas.getContext(\'2d\')\n      ctx.drawImage(target, 0, 0, target.width, target.height)\n      const ext = target.src.substring(target.src.lastIndexOf(\'.\') + 1).toLowerCase()\n      const dataURL = canvas.toDataURL(\'image/\' + ext)\n      resolve(dataURL)\n    }\n    image.onerror = (err) => {\n      reject(err)\n    }\n  })\n}\n```\n\n\n## 文件换算大小 => getFileSize\n```\n/**\n * 文件换算大小\n * @param {Number} fileSizeByte - 文件大小(kb)\n */\nexport function getFileSize(fileSizeByte) {\n  let fileSizeMsg = \'\'\n  if (fileSizeByte < 1048576)\n    fileSizeMsg = (fileSizeByte / 1024).toFixed(2) + \'KB\'\n  else if (fileSizeByte === 1048576) fileSizeMsg = \'1MB\'\n  else if (fileSizeByte > 1048576 && fileSizeByte < 1073741824)\n    fileSizeMsg = (fileSizeByte / (1024 * 1024)).toFixed(2) + \'MB\'\n  else if (fileSizeByte > 1048576 && fileSizeByte === 1073741824)\n    fileSizeMsg = \'1GB\'\n  else if (fileSizeByte > 1073741824 && fileSizeByte < 1099511627776)\n    fileSizeMsg = (fileSizeByte / (1024 * 1024 * 1024)).toFixed(2) + \'GB\'\n  else fileSizeMsg = \'文件超过1TB\'\n  return fileSizeMsg\n}\n```\n\n\n\n# vue\n\n## 父子组件用 .sync => getSet\n```\n/**\n * 对于父子组绑定的sync使用\n * 在子组件中的computed调用\n * @export get/set\n * @param {*} value\n */\nexport function getSet(value, setFn) {\n  return {\n    get() {\n      return this[value]\n    },\n    set(nd) {\n      if (setFn) {\n        setFn(nd)\n      } else {\n        this.$emit(`update:${value}`, nd)\n      }\n    }\n  }\n}\n```\n使用\n\n```\nexport default {\n  props: {\n    value: {\n      type: String,\n      default: \'\'\n    }\n  },\n  computed: {\n    upValue: getSet(\'value\')\n  },\n  created() {\n    this.upValue = 123 // 改变传进来的值为 123\n  }\n}\n```\n\n\n## 节流/防抖组件\n组件事件节流/防抖\n支持传入组件和普通 html\n\n```\n/**\n * 防抖/节流\n * @param {Function} fn - 调用的函数\n * @param {Number} wait - 时间间隔\n * @param {Boolean} isDebounce - true为防抖，false为节流，默认是false\n * @param {Object} ctx - 上下文\n */\nconst throttle = function (fn, wait = 50, isDebounce, ctx) {\n  let timer\n  let lastCall = 0\n  return function (...params) {\n    if (isDebounce) {\n      if (timer) clearTimeout(timer)\n      timer = setTimeout(() => {\n        fn.apply(ctx, params)\n      }, wait)\n    } else {\n      const now = new Date().getTime()\n      if (now - lastCall < wait) {\n        return\n      }\n      lastCall = now\n      fn.apply(ctx, params)\n    }\n  }\n}\n\nexport default {\n  name: \'Throttle\',\n  abstract: true, // 抽象组件\n  props: {\n    time: { // 时间间隔\n      type: Number,\n      default: 300\n    },\n    events: { // 事件列表，click,dblclick...\n      type: String,\n      default: \'\'\n    },\n    isDebounce: { // 触发的是节流还是防抖\n      type: Boolean,\n      default: false // false为节流，true为防抖\n    },\n    type: { // true:listeners, false:普通事件\n      type: Boolean,\n      default: false\n    }\n  },\n  created() {\n    this.eventKeys = this.events.split(\',\').map(e => e.replace(/(^\\s*)|(\\s*$)/g, \'\'))\n    this.originMap = {}\n    this.throttledMap = {}\n  },\n  render() {\n    const vnode = this.$slots.default[0]\n    this.eventKeys.forEach((key) => {\n      const list = this.type ? vnode.componentOptions.listeners : vnode.data.on\n      const target = list[key] || {}\n      if (target === this.originMap[key] && this.throttledMap[key]) {\n        list[key] = this.throttledMap[key]\n      } else if (target) {\n        this.originMap[key] = target\n        this.throttledMap[key] = throttle(target, this.time, this.isDebounce, vnode)\n        list[key] = this.throttledMap[key]\n      }\n    })\n    return vnode\n  }\n}\n```\n使用\n```\n<template>\n  <throttle time=\"300\" events=\"click, dbclick\" isDebounce>\n    <span @click=\"handleClick\" @dbclick=\"handleDbclick\">点击/双击</span>\n  </throttle>\n</template>\n\n<script>\nimport throttle from \'throttle\'\nexport default {\n  components: { throttle },\n  methods: {\n    handleClick() {\n      // 300毫秒内只能触发一次\n      console.log(\'单击\')\n    },\n    handleDbclick() {\n      // 300毫秒内只能触发一次\n      console.log(\'双击\')\n    }\n  }\n}\n</script>\n```\n\n-----------------------持续更新--------------------------', '干货', '39', 'http://cdn.lululuting.com/7d1c4220-71d8-11ea-9ba6-fdf6f3c40acb', '2', '2020-03-29 17:16:58', '1', '工具类,常用');
INSERT INTO `article` VALUES ('16', '1', 'css的一些奇巧淫技', '\n\n# 格子背景\n```\n.lattice{\n	background: -webkit-linear-gradient(top, transparent 19px, #ececec 20px), -webkit-					linear-gradient(left, transparent 19px, #ececec 20px)\n	ackground-size: 20px 20px;\n}\n\n```\n效果：\n\n![avatar](http://cdn.lululuting.com/0a2bbdc0-71cb-11ea-85e0-b7c9d879a372)\n\n实践:\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"格子背景\" src=\"https://codepen.io/lululuting/embed/preview/poJGvKg?height=265&theme-id=dark&default-tab=css,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\'https://codepen.io/lululuting/pen/poJGvKg\'>格子背景</a> by 陆挺\n  (<a href=\'https://codepen.io/lululuting\'>@lululuting</a>) on <a href=\'https://codepen.io\'>CodePen</a>.\n</iframe>\n\n\n\n# 同级变淡\n```\n// html\n<div class=\"sibling-fade\">\n  <span>Item 1</span>\n  <span>Item 2</span>\n  <span>Item 3</span>\n  <span>Item 4</span>\n  <span>Item 5</span>\n  <span>Item 6</span>\n</div>\n\n// css\nspan {\n  padding: 0 1rem;\n  transition: opacity 0.2s;\n}\n.sibling-fade:hover span:not(:hover) {\n  opacity: 0.5;\n}\n```\n实践:\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"同级变淡\" src=\"https://codepen.io/lululuting/embed/bGVbbjj?height=265&theme-id=dark&default-tab=html,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\'https://codepen.io/lululuting/pen/bGVbbjj\'>同级变淡</a> by 陆挺\n  (<a href=\'https://codepen.io/lululuting\'>@lululuting</a>) on <a href=\'https://codepen.io\'>CodePen</a>.\n</iframe>\n', '简单 神奇', '28', 'http://cdn.lululuting.com/8b938340-71d3-11ea-8260-2b68f392b318', '0', '2020-03-29 22:40:04', '1', 'css,奇巧淫技');
INSERT INTO `article` VALUES ('17', '1', '2020 前端面试指北', '又到一年一度的金三银四的跳槽季，不过今年收疫情影响，倒闭的公司一大把，面试的人也超级多，竞争非常大。现在的公司都在精挑细选的挑人，不管你面试发挥有多好，面完都是叫回去等通知，因为他们在一一对比找一个`性价比`高的。想跳槽的小伙伴 慎重！。\n\n我最近面了几波效果都不太理想。问的一些问题有些答上了也是答了个大概，一深问立马就不行了。有些则是听都没听说过。。。哎，太菜了，总结一下最近的面试吧，也算是一些经验。\n**不过，本人学识有限 文章多有不足，若有错误 请大方指出 以免误导他人**\n\n# 基础类\n## 1.Css的选择器有哪些？\n你敢相信这个问题竟然出现了两次。好吧，当时问我的时候我也是一时愣着住了，不过还是答了上一些。再问自杀。\n\n- 基本选择器：`标签选择器（div、p 这些）` `id选择器（#）` `类选择器（.）` `通用选择器（*）`\n\n- 高级选择器： `后代选择器（用空格隔开）` `交集选择器：（用.隔开）` `并集选择器（分组选择器）：用逗号隔开` `伪类选择器` `紧邻下级选择器 （>）` `下一个兄弟选择器 (+)`\n\n\n还有一些忘了，答上这些也差不多了吧。\n\n\n## 2.Css有哪些继承属性？\n\n这个问题也是突然一愣，想了想 我就回答 `字体` `颜色` 这些，面试官也是点了点头~~~ 后面回来查查，其实远远不止这些...\n\n**有继承性的属性：**\n1、字体系列属性\nfont：组合字体\nfont-family：规定元素的字体系列\nfont-weight：设置字体的粗细\nfont-size：设置字体的尺寸\nfont-style：定义字体的风格\nfont-variant：设置小型大写字母的字体显示文本，这意味着所有的小写字母均会被转换为font-stretch：允许你使文字变宽或变窄。所有主流浏览器都不支持\nfont-size-adjust：为某个元素规定一个 aspect 值，字体的小写字母 “x” 的高度与 “font-size” 高度之间的比率被称为一个字体的 aspect 值。这样就可以保持首选字体的 x-height。\n2、文本系列属性\ntext-indent：文本缩进\ntext-align：文本水平对齐\nline-height：行高\nword-spacing：增加或减少单词间的空白（即字间隔）\nletter-spacing：增加或减少字符间的空白（字符间距）\ntext-transform：控制文本大小写\ndirection：规定文本的书写方向\ncolor：文本颜色\n3、元素可见性：visibility\n4、表格布局属性：caption-side、border-collapse、border-spacing、empty-cells、table-layout\n5、列表属性：list-style-type、list-style-image、list-style-position、list-style\n6、生成内容属性：quotes\n7、光标属性：cursor\n8、页面样式属性：page、page-break-inside、windows、orphans\n9、声音样式属性：speak、speak-punctuation、speak-numeral、speak-header、 speech-rate、volume、voice-family、pitch、pitch-range、 stress、richness、、azimuth、elevation\n\n**所有元素可以继承的属性：**\n1、元素可见性：visibility、opacity\n2、光标属性：cursor\n\n内联元素可以继承的属性:\n1、字体系列属性\n2、除text-indent、text-align之外的文本系列属性\n\n**块级元素可以继承的属性:**\n1、text-indent、text-align\n\n**无继承的属性**\n1、display\n2、文本属性：vertical-align： text-decoration： text-shadow： white-space： unicode-bidi：\n3、盒子模型的属性:宽度、高度、内外边距、边框等\n4、背景属性：背景图片、颜色、位置等\n5、定位属性：浮动、清除浮动、定位position等\n6、生成内容属性:content、counter-reset、counter-increment\n7、轮廓样式属性:outline-style、outline-width、outline-color、outline\n8、页面样式属性:size、page-break-before、page-break-after\n继承中比较特殊的几点\n1、a 标签的字体颜色不能被继承\n2、h1-h6标签字体的大小是不能被继承的因为它们都有一个默认值\n\n\n## 3.BFC?\n说实话我没遇问这个的，我不知道就问这个概念有什么用。我同事遇到了，也记一下吧。\n\nBFC规范(块级格式化上下文：block formatting context)\n\n**BFC有以下特性：**\n\n- 1、内部的Box会在垂直方向，从顶部开始一个接一个地放置。\n- 2、Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生叠加\n- 3、每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。\n- 4、BFC的区域不会与float box叠加。\n- 5、BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素，反之亦然。\n- 6、计算BFC的高度时，浮动元素也参与计算。\n\n**那么我们怎样做就可以触发BFC呢**\n\n- float 除了none以外的值 overflow 除了visible 以外的值（hidden，auto，scroll ）\n- display (table-cell，table-caption，inline-block, flex, inline-flex)\n- position值为（absolute，fixed） fieldset元素\n- fieldset元素 在以上情况下可以创建BFC\n\n**BFC可以解决的问题**\n\n- margin叠加的问题，我们将某个元素放到我们新建的BFC里面就可以避免margin叠加、\n- 对于左右布局的元素，我们可以给右侧的元素添加overflow:hidden或者auto，左侧的是float:left\n- 可以清除浮动，计算BFC高度，浮动元素不会撑开父元素的高度，我们可以让父元素触发BFC,即使用overflow:hidden\n\n## 4.从输入URL到页面加载发生了什么?\n对嘛，问一下这些有点难度的才对嘛。虽然我也不是很懂，背一下还是可以的~\n\n1、浏览器查找当前URL是否存在缓存，并比较缓存是否过期 然后 DNS域名解析\n2、发起TCP连接（三次握手）\n3、发送HTTP请求\n4、服务器处理请求并返回HTTP报文\n5、浏览器解析渲染页面\n6、断开TCP连接（四次挥手）\n\n## 5.HTTP状态码有哪些说说你知道的\n这个，这个 当前端的谁不知道。经常遇到的有 `200` `304` `500` `401` `403` `404` `502` 这些，其他的一般不会遇到，遇到再百度吧。\n这可能是个送分题吧。\n\n200    OK    请求成功。一般用于GET与POST请求\n201    Created    已创建。成功请求并创建了新的资源\n202    Accepted    已接受。已经接受请求，但未处理完成\n203    Non-Authoritative Information    非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本\n204    No Content    无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档\n205    Reset Content    重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域\n206    Partial Content    部分内容。服务器成功处理了部分GET请求\n300    Multiple Choices    多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择\n301    Moved Permanently    永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替\n302    Found    临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI\n303    See Other    查看其它地址。与301类似。使用GET和POST请求查看\n304    Not Modified    未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源\n305    Use Proxy    使用代理。所请求的资源必须通过代理访问\n306    Unused    已经被废弃的HTTP状态码\n307    Temporary Redirect    临时重定向。与302类似。使用GET请求重定向\n400    Bad Request    客户端请求的语法错误，服务器无法理解\n401    Unauthorized    请求要求用户的身份认证\n402    Payment Required    保留，将来使用\n403    Forbidden    服务器理解请求客户端的请求，但是拒绝执行此请求\n404    Not Found    服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置\"您所请求的资源无法找到\"的个性页面\n500    Internal Server Error    服务器内部错误，无法完成请求\n501    Not Implemented    服务器不支持请求的功能，无法完成请求\n502    Bad Gateway    作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应\n503    Service Unavailable    由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中\n504    Gateway Time-out    充当网关或代理的服务器，未及时从远端服务器获取请求\n505    HTTP Version not supported    服务器不支持请求的HTTP协议的版本，无法完成处理\n\n\n## 6.闭包！！！\n`闭迟但到`，闭包可能会晚点问，但永远不会缺席。闭包真是面试的常客啊，基本每次面试都问到！不过问的不是很深，(我能背出来了) 就简单问问概念性的东西，比较口头上也问不出什么所以然来，我认为闭包难就难在`笔试`的面试题上~\n\n**1.什么是闭包？**\n`闭包是指有权访问另外一个函数作用域中的变量的函数。可以理解为(能够读取另一个函数作用域的变量的函数)`\n\n**2.闭包怎么写？**\n```\nfunction outer() {\n     var  a = \'变量1\'\n     var  inner = function () {\n            console.info(a)\n     }\n    return inner    // inner 就是一个闭包函数，因为他能够访问到outer函数的作用域\n}\nvar  inner = outer()   // 获得inner闭包函数\ninner()   //\"变量1\"\n```\n当程序执行完var inner = outer()，其实outer的执行环境并没有被销毁，因为他里面的变量a仍然被被inner的函数作用域链所引用，当程序执行完inner(), 这时候，inner和outer的执行环境才会被销毁调；《JavaScript高级编程》书中建议：由于闭包会携带包含它的函数的作用域，因为会比其他函数占用更多内容，过度使用闭包，会导致内存占用过多。\n\n**3.闭包有哪些坑点？**\n坑点1 `引用的变量可能发生变化`\n```\nfunction outer() {\n      var result = [];\n      for （var i = 0； i<10; i++）{\n        result.[i] = function () {\n            console.info(i)\n        }\n     }\n     return result\n}\n```\n看样子result每个闭包函数对打印对应数字，1,2,3,4,...,10, 实际不是，因为每个闭包函数访问变量i是outer执行环境下的变量i，随着循环的结束，i已经变成10了，所以执行每个闭包函数，结果打印10， 10， ..., 10\n怎么解决这个问题呢？\n```\nfunction outer() {\n      var result = [];\n      for （var i = 0； i<10; i++）{\n        result[i] = function (num) {\n             return function() {\n                   console.info(num);    // 此时访问的num，是上层函数执行环境的num，数组有10个函数对象，每个对象的执行环境下的number都不一样\n             }\n        }(i)\n     }\n     return result\n}\n```\n\n坑点2: `this指向问题`\n```\nvar object = {\n     name: \'\'object\"，\n     getName： function() {\n        return function() {\n             console.info(this.name)\n        }\n    }\n}\nobject.getName()()    // underfined\n// 因为里面的闭包函数是在window作用域下执行的，也就是说，this指向windows\n```\n\n坑点3：`内存泄露问题`\n```\nfunction  showId() {\n    var el = document.getElementById(\"app\")\n    el.onclick = function(){\n      aler(el.id)   // 这样会导致闭包引用外层的el，当执行完showId后，el无法释放\n    }\n}\n\n// 改成下面\nfunction  showId() {\n    var el = document.getElementById(\"app\")\n    var id  = el.id\n    el.onclick = function(){\n      aler(id)   // 这样会导致闭包引用外层的el，当执行完showId后，el无法释放\n    }\n    el = null    // 主动释放el\n}\n```\n\n技巧1： `用闭包解决递归调用问题`\n```\nfunction  factorial(num) {\n   if(num<= 1) {\n       return 1;\n   } else {\n      return num * factorial(num-1)\n   }\n}\nvar anotherFactorial = factorial\nfactorial = null\nanotherFactorial(4)   // 报错 ，因为最好是return num* arguments.callee（num-1），arguments.callee指向当前执行函数，但是在严格模式下不能使用该属性也会报错，所以借助闭包来实现\n\n\n// 使用闭包实现递归\nfunction newFactorial = (function f(num){\n    if(num<1) {return 1}\n    else {\n       return num* f(num-1)\n    }\n}) //这样就没有问题了，实际上起作用的是闭包函数f，而不是外面的函数newFactorial\n```\n\n技巧2：`用闭包模仿块级作用域`\nes6没出来之前，用var定义变量存在变量提升问题, 现在大多用es6的`let` 和 `const` 定义就没有了。\n```\nfor(var i=0; i<10; i++){\n    console.info(i)\n}\nalert(i)  // 变量提升，弹出10\n\n//为了避免i的提升可以这样做\n(function () {\n    for(var i=0; i<10; i++){\n         console.info(i)\n    }\n})()\nalert(i)   // underfined   因为i随着闭包函数的退出，执行环境销毁，变量回收\n```\n\n**4.使用闭包的注意点**\n（1）由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以`不能滥用`闭包，否则会造成网页的`性能问题`，在IE中可能导致`内存泄露`。解决方法是，在退出函数之前，将不使用的局部变量全部`删除`。\n（2）闭包会在父函数外部，改变父函数内部变量的值。所以，如果你把父函数当作对象（object）使用，把闭包当作它的公用方法（Public Method），把内部变量当作它的私有属性（private value），这时一定要小心，`不要随便改变父函数内部变量的值`。\n\n\n个人感觉，简单来说闭包就是在函数里面声明函数，本质上说就是在函数内部和函数外部搭建起一座桥梁，使得`子函数可以访问父函数中所有的局部变量`，但是反之不可以，这只是闭包的作用之一，另一个作用，则是`保护变量不受外界污染`，使其一直存在内存中，在工作中我们还是少使用闭包，因为闭包`太消耗内存`，不到万不得已的时候尽量不使用。\n\n\n## 7.遇到过跨域问题吗？\n跨域也是面试常客，别问 问就nginx代理\n\n**什么是跨域？**\n浏览器同源策略（`协议`+`端口号`+`域名`要相同）不同就会产生跨域\n\n**跨域怎么解决？**\n1、`jsonp`跨域(只能解决get）\n原理：动态创建一个script标签。利用script标签的src属性不受同源策略限制，因为所有的src属性和href属性都不受同源策略的限制，可以请求第三方服务器资源内容\n\n2、服务器设置对`CORS`的支持\n原理：服务器设置Access-Control-Allow-Origin HTTP响应头之后，浏览器将会允许跨域请求\n\n3、`nginx` 反响代理\n原理：监听同一个域名和端口，不同路径转发到客户端和服务器，把不同端口和域名的限制通过反向代理，来解决跨域问题。\n\n\n## 8.Nginx用过吗？\n一直以为Nginx是后端问题，直到我来到了恒企。后端不管你，运维也不给你配~~ 与其跟他们扯皮还不如自己动手丰衣足食。\n我们也不搞什么复杂的负载均衡 什么高并发这些，只要能处理我们平时日常开发的接口跨域问题就够了，其他Nginx的知识有这种需求再去学不迟。\n\n\n**什么是Nginx?**\n\nNginx (读作”engine X”) 由Igor Sysoev(俄罗斯)于2005年编写，是一个免费、开源、高性能的HTTP服务器和反向代理，也可以作为一个IMAP/POP3代理服务器。enenenen...反正很牛逼就是了。\n\n**Nginx在前端的简单应用**\n\n部署单页面应用：\n首先 单页面应用打包出来了就是一个静态资源，只要往服务器的文件夹一丢。然后`代理网站域名的80端口`，然后再root`指向静态资源的文件夹`就完事了。\n`nginx.conf`配置：\n```\n    server{\n        listen 80;\n        server_name 你的域名比如（admin.lululuting.com）;\n\n        location / {\n			# root 根目录\n            root /var/www/tingGeBlog/admin;\n			# 这个解决单页面刷新404的问题\n            try_files $uri $uri/ /index.html;\n			#设置默认页\n            index index.html;\n        }\n    }\n```\n\n反向代理api接口：\n平时我们对接接口时都喜欢 用 `/api/user/getUserInfo` 这种连接去发送请求数据, 如果不做代理的话，那浏览器请求的地址就是 `http://localhost:8080/api/user/getuserInfo`(假如是8080端口) 这样子的。如果你本地没有起8080端口的接口服务的话，那么就是`无法访问此网站`报错。\n\n怎么呢办呢?\n\n现在一般 vue/react 的脚手架都会集成proxy代理服务，原理就是`npm run dev/start`启动项目时的本地的node服务会帮你代理。在开发阶段只需要在你的工程文件中找到`config`的配置文件代理一下。\n\n```\n // 代理\n  proxy: {\n    \'/api/\': {\n      target: \'http://192.168.0.1:7001/admin\',\n      changeOrigin: true,\n      pathRewrite: { \'^/api\': \'\' },\n    }\n  },\n```\n但是这只是`开发环境下有效`，因为打包后丢服务器都是静态资源，不存在什么node服务，自然就失效了。\n这时候就需要在服务器环境下 配置Nginx 进行代理了。\n\n只需要 加多一行 `location /api/` 然后 `proxy_pass` 到你要的url。\n```\n server{\n        listen 80;\n        server_name 你的域名比如（admin.lululuting.com）;\n\n        location / {\n			# root 根目录\n            root /var/www/tingGeBlog/admin;\n			# 这个解决单页面刷新404的问题\n            try_files $uri $uri/ /index.html;\n			#设置默认页\n            index index.html;\n        }\n        location /api/ {\n            proxy_pass  http://192.168.0.1:7001/admin/;\n        }\n    }\n```\n搞好代理后, 再发起 `/api/user/getUserInfo` 的请求，Nginx会首先监测到 `api` 这个字符，然后改写你的请求地址变成 `http://192.168.0.1:7001/admin/user/getUserInfo`. 如果你接口没写错，那应该是成功了。\n\nNginx 不单单只是代理这么简单，还可以\n- 1.判断pc或者手机 跳转不一样的地址\n- 2.gizp 压缩 优化访问速度\n- 3.设置缓存规则 header头 上传文件大小限制 这些\n- 4.等等等等等等等等等等等等\n\n这里只是简单代理一下接口，其他一些高深用法 请另行百度哈\n\n\n## 9.判断一个变量是对象还是数组\n推荐使用 `Object.prototype.toString.call()`\n\n首先 typeOf()是判断`基本类型`的 Boolean, Number, symbol, undefined, String。对于引用类型：除function，都返回object   null返回object。`不能用`\n要想区分对象、数组、函数、单纯使用typeof是不行的。在JS中，可以通过`Object.prototype.toString`方法，判断某个对象之属于哪种`内置类型`。\n```\nObject.prototype.toString.call(null); // \"[object Null]\"\nObject.prototype.toString.call(undefined); // \"[object Undefined]\"\nObject.prototype.toString.call(“abc”);// \"[object String]\"\nObject.prototype.toString.call(123);// \"[object Number]\"\nObject.prototype.toString.call(true);// \"[object Boolean]\"\n```\n\n\n\n## 10.前端有哪些页面优化方法?\n这也是经常问的，来来回回就那样，可能面试官就喜欢这样子走走过场吧~~\n\n1. 减少 HTTP请求数\n2. 从设计实现层面简化页面\n3. 合理设置 HTTP缓存\n4. 资源合并与压缩\n5. 合并 CSS图片，减少请求数的又一个好办法。\n6. 将外部脚本置底（将脚本内容在页面信息内容加载后再加载）\n7. 多图片网页使用图片懒加载。\n8. 在js中尽量减少闭包的使用\n9. 尽量合并css和js文件\n10. 尽量使用字体图标或者SVG图标，来代替传统的PNG等格式的图片\n11. 减少对DOM的操作\n12. 在JS中避免“嵌套循环”和 “死循环”\n13. 尽可能使用事件委托（事件代理）来处理事件绑定的操作\n14. 有条件的话 静态资源上cdn，搞大点服务器带宽\n\n\n## 11.描述一下XSS和CRSF攻击？防御方法？\n会问，但不是很经常\n\n参考回答：\n`XSS`, 即为（Cross Site Scripting）, 中文名为跨站脚本, 是发生在目标用户的浏览器层面上的，当渲染DOM树的过程成发生了不在预期内执行的JS代码时，就发生了XSS攻击。大多数XSS攻击的主要方式是嵌入一段远程或者第三方域上的JS代码。实际上是在目标网站的作用域下执行了这段js代码。\n`CSRF`（Cross Site Request Forgery，跨站请求伪造），字面理解意思就是在别的站点伪造了一个请求。专业术语来说就是在受害者访问一个网站时，其 Cookie 还没有过期的情况下，攻击者伪造一个链接地址发送受害者并欺骗让其点击，从而形成 CSRF 攻击。\n\n**XSS防御的总体思路是：**\n对输入(和URL参数)进行过滤，对输出进行编码。也就是对提交的所有内容进行过滤，对url中的参数进行过滤，过滤掉会导致脚本执行的相关内容；然后对动态输出到页面的内容进行html编码，使脚本无法在浏览器中执行。虽然对输入过滤可以被绕过，但是也还是会拦截很大一部分的XSS攻击。\n\n**防御CSRF 攻击主要有三种策略：**\n验证 HTTP Referer 字段；在请求地址中添加 token 并验证；在 HTTP 头中自定义属性并验证。\n\n\n\n\n# 功能类\n就喜欢被问功能类的问题，觉得比较务实。问思路，真没怕过。\n\n## 1.登录的流程问题\n这个也经常问，频率不高，但是作为开发必须要弄清楚。\n\n我说说我平时系统的登录是怎么做的：\n\n1. 除了登录接口，其他接口都是要进行token校验，如发现token不合法或者过期,返回状态码`401`！\n2. ajax请求库 统一封装拦截器 header头报携带上token, 统一处理 200 500 401 这些状态码。由后端设置token过期时间，如有401状态返回， 前端要`清除` loaclStorage/cookie 里存放的用户信息，然后跳转login页。\n3. 当用户成功登录后, loaclStorage/cookie （别放vuex/redux）设置保留用户的Token, 然后每次请求就从 loaclStorage/cookie里拿`最新的`token信息就ok了，如果过期，自然会跳转到登录页。\n3. 配合 vue的路由守卫/react的高阶组件 在`进入目标页面前` 判断是否为登录状态，是就下一步，否就清除 loaclStorage/cookie 里存放的token信息，跳转login页。\n4. 退出登录要清除 loaclStorage/cookie 里存放的token信息。\n\ntoken为什么要放 loaclStorage/cookie 呢？因为我要做免密登录，在token未过期的时间段内用户可以随便玩，如果你没有这个需求你可以放`sessionStorage`, 但不要傻逼的放vuex/redux里面。\n\n## 2.浏览器缓存问题\n会问，遇到过两次。也是答了个大概~~\n\n首先http缓存分为两种，`强缓存` 200 from cache 和 `协商缓存` 304 not modified，优先级较高的是强缓存，在命中强缓存失败的情况下，才会走协商缓存。\n\n首先来看张图：\n![avatar](http://cdn.lululuting.com/925a1360-7494-11ea-b0df-51ef1b064ab8)\n\n**原理**\n\n- 浏览器在加载资源时，根据请求头的Expires 和 cache-control判断是否命中强缓存，如果命中则直接从缓存读取资源，不会向服务器发起请求。\n- 如果强缓存没有命中，浏览器就会向服务器发起请求，通过last-modefied 和Etag去判断资源是否命中协商缓存，如果命中代表资源没有更新，服务器会返回304，读取缓存中的资源，如果没有命中，则代表资源有更新，服务器会返回200，从服务器加载资源。\n\n缓存通过`Expires` 和 `Cache-Control` 两种响应头实现。\n\n1. `Expires`\nExpires HTTP/1.0的东西， 表示资源会在设置的时间后过期，需要再次请求。并且受限于本地时间，如果修改了本地时间，可能造成缓存失效。\n```\nExpires: Wed, 22 Oct 2018 08:41:00 GMT\n```\n验证方式是 `If-Modified-Since/Last-Modified`。\n\n2. `Cache-Control`\nCache-Control HTTP/1.1的东西，优先级高于 Expires ,表示的是相对时间。\n```\nCache-Control: max-age=315360000 // max-age 过期时间（单位为s）\n```\n验证方式是`If-None-Match/Etag`\n\n总结：\n- Cache-Control 和 Expires 的作用是一样的， Cache-Control 优先级高，也可以同时用，向下兼容~\n- 现代浏览器已经默认开启缓存没有特殊要求，缓存一般不用动\n\n解决缓存残留问题:\n1. `ctrl+f5` / 客户端F12清空缓存并硬性加载 最直接最有效的。\n2. 每次发布时加上版本号或者直接`New Date()`这种方法针对jq这种老项目有效， 一般工程化的项目，打包时都会集成hahs插件命名文件名的，基本用不上。\n\n\n## 3.CDN缓存问题\n问了，有些人没搞过cdn，可能真不知道~\n\nCDN边缘节点对开发者是透明的，相比于浏览器Ctrl+F5的强制刷新来使浏览器本地缓存失效，开发者可以通过CDN服务商提供的“`刷新缓存`”接口来达到清理CDN边缘节点缓存的目的。这样开发者在更新数据后，可以使用“刷新缓存”功能来强制CDN节点上的数据缓存过期，保证客户端在访问时，拉取到最新的数据。\n\n简单来说就是cdn服务商会都有个`刷新缓存`的按钮给你的！发布新资源记得手动刷新一下缓存！\n\n\n\n# vue\n接下来是一些vue框架的使用问题\n## 1.vue的常用指令有哪些？\n2020年都会有人问这个！走过场~ 走过场~\n\n\n`v-show` 和v-if不同的是，如果v-if的值是false，则这个元素被销毁，不在dom中。但是v-show的元素会始终被渲染并保存在dom中，它只是简单的切换css的dispaly属性。\n`v-if` 可以实现条件渲染，Vue会根据表达式的值的真假条件来渲染元素。\n`v-else` 是搭配v-if使用的，它必须紧跟在v-if或者v-else-if后面，否则不起作用。\n`v-for` 用v-for指令根据遍历数组来进行渲染\n`v-text` 主要用来更新textContent，可以等同于JS的text属性。\n`v-html` 双大括号的方式会将数据解释为纯文本，而非HTML。为了输出真正的HTML，可以用v-html指令。它等同于JS的innerHtml属性。\n`v-bind` v-bind用来动态的绑定一个或者多个特性。没有参数时，可以绑定到一个包含键值对的对象。常用于动态绑定class和style。以及href等。\n简写为一个冒号`【 ：】`\n `v-on` v-on主要用来监听dom事件，以便执行一些代码块。表达式可以是一个方法名。\n简写为：`【 @ 】`\n`v-model` 这个指令用于在表单上创建双向数据绑定。v-model会忽略所有表单元素的value、checked、selected特性的初始值。因为它选择Vue实例数据做为具体的值。\nv-model修饰符:\n```\n<input v-model.lazy=\"msg\"> // 默认情况下，v-model同步输入框的值和数据。可以通过这个修饰符，转变为在change事件再同步。\n<input v-model.number=\"msg\"> // 自动将用户的输入值转化为数值类型\n<input v-model.trim=\"msg\"> // 自动过滤用户输入的首尾空格\n```\n\n事件修饰符:\n```\n<!-- 阻止单击事件继续传播 -->\n<a v-on:click.stop=\"doThis\"></a>\n\n<!-- 提交事件不再重载页面 -->\n<form v-on:submit.prevent=\"onSubmit\"></form>\n\n<!-- 修饰符可以串联 -->\n<a v-on:click.stop.prevent=\"doThat\"></a>\n\n<!-- 只有修饰符 -->\n<form v-on:submit.prevent></form>\n\n<!-- 添加事件监听器时使用事件捕获模式 -->\n<!-- 即元素自身触发的事件先在此处处理，然后才交由内部元素进行处理 -->\n<div v-on:click.capture=\"doThis\">...</div>\n\n<!-- 只当在 event.target 是当前元素自身时触发处理函数 -->\n<!-- 即事件不是从内部元素触发的 -->\n<div v-on:click.self=\"doThat\">...</div>\n\n<!-- 点击事件将只会触发一次 -->\n<a v-on:click.once=\"doThis\"></a>\n\n<!-- 滚动事件的默认行为 (即滚动行为) 将会立即触发 -->\n<!-- 而不会等待 `onScroll` 完成  -->\n<!-- 这其中包含 `event.preventDefault()` 的情况 -->\n<div v-on:scroll.passive=\"onScroll\">...</div>\n```\n\n\n\n## 2.vue-router 鉴权问题\n路由鉴权问题 不管是vue还是react 十有八九必问！\n\n后台系统，用户角色和权限必定会有的，常见的用户权限区分形式有两种：\n一是前端请求接口拿到后台配置的用户权限信息；\n另一种是直接由前端来定义每种用户角色的权限页面，然后在生成对应的路由。\n\nvue用vue-router的路由守卫。`router.beforeEach((to,from,next)=>{})`\n```\nrouter.beforeEach((to,from,next)=>{\n  if(to.path == \'/login\' || to.path == \'/register\'){\n    next();\n  }else{\n    alert(\'您还没有登录，请先登录\');\n    next(\'/login\');\n  }\n})\n```\n\nreact没有路由守卫这种东西，就用`高阶组件`来解决。\n\n## 3.按需加载\n经常问！！！\n\n**按需加载**\n目的:\n只在访问当前页面时加载对应组件，避免页面组件全部加载，优化页面加载速度。\n\n原理：\n利用webpack对代码进行分割是懒加载的前提，懒加载就是异步调用组件，需要时候才下载。\n\n方法1：ES6\n```\n// 下面2行代码，没有指定webpackChunkName，每个组件打包成一个js文件。\nconst ImportFuncDemo1 = () => import(\'../components/ImportFuncDemo1\')\nconst ImportFuncDemo2 = () => import(\'../components/ImportFuncDemo2\')\n// 下面2行代码，指定了相同的webpackChunkName，会合并打包成一个js文件。\n// const ImportFuncDemo = () => import(/* webpackChunkName: \'ImportFuncDemo\' */ \'../components/ImportFuncDemo\')\n// const ImportFuncDemo2 = () => import(/* webpackChunkName: \'ImportFuncDemo\' */ \'../components/ImportFuncDemo2\')\n```\n\n方法2: vue-router配置路由\nvue-router配置路由，使用vue的异步组件技术，可以实现按需加载。\n但是，这种情况下一个组件生成一个js文件。\n\n```\n{\n    path: \'/xxx\',\n    name: \'xxx\',\n    component: resolve => require([\'../components/xxx\'], resolve)\n}\n```\n\n## 4.keep-alive\nkeep-alive 也会问到，但是实际上项目里用的不多。\n\n**缓存组件keep-alive**\n有时候我们不希望组件被重新渲染影响使用体验；或者处于性能考虑，避免多次重复渲染降低性能。而是希望组件可以缓存下来,维持当前的状态。这时候就可以用到keep-alive组件。\n这是Vue的`内置组件`，能在组件切换过程中将状态保留在内存中，`防止重复渲染DOM`。\n\n**应用场景**\n使用keep-alive组件会显著提高用户体验，菜单存在多级关系，多见于列表页+详情页的场景如：\n\n- 1、商品列表页点击商品跳转到商品详情，返回后仍显示原有信息\n- 2、订单列表跳转到订单详情，返回，等等场景。\n\n\n**使用方法：**\n\n**一. 普通使用**\nprops 4个参数\n\n- include string或正则，只有名称匹配的组件会被缓存 2.1.0+\n- exclude string或正则, 名称匹配的组件不会被缓存 2.1.0+\n- max 最多可以缓存多少组件实例 2.5.0+\n- activated 和 deactivate 生命周期钩子\n\n```\n<keep-alive include=\"a,b\" :include=\"[\'a\',\'b\']\" :exclude=\"/a|b/\" :max=\"10\">\n  <component :is=\'view\'></component>\n</keep-alive>\n```\n\n**二. 结合router使用**\n1.更改App.vue\n```\n<div id=\"app\" class=\'wrapper\'>\n    <keep-alive>\n        <!-- 需要缓存的视图组件 -->\n        <router-view v-if=\"$route.meta.keepAlive\"></router-view>\n     </keep-alive>\n      <!-- 不需要缓存的视图组件 -->\n     <router-view v-if=\"!$route.meta.keepAlive\"></router-view>\n</div>\n```\n2.在路由中设置keepAlive\n```\n{\n  path: \'list\',\n  name: \'itemList\', // 商品管理\n  component (resolve) {\n    require([\'@/pages/item/list\'], resolve)\n },\n meta: {\n  keepAlive: true,\n  title: \'商品管理\'\n }\n}\n```\n\n\n\n# react\n现在技术栈为react,面的也是react，react问题可多咯。\n\n## react hooks\n\n:satisfied:\n\n\n------------待续\n\n\n\n\n\n\n', '都是泪啊', '136', 'http://cdn.lululuting.com/b44cf7d0-74e4-11ea-9e0d-5d31f8d3722b', '5', '2020-03-30 10:37:08', '1', '面试,前端');
INSERT INTO `article` VALUES ('18', '1', '有趣的文案，总能给生活来点儿创意', '来自罗永浩直播播间推荐笔文案：\n\n这支笔能写50000字，如果你用这个笔去画直线，能画1.6公里，一盒10支，如果你不到处乱扔，一个笔能写一辈子，能写到孙子辈儿。\n\n文案出自美国佛罗里达州的一家电影院：\n\n电影院关闭，直到现实生活不再如电影般魔幻\n心持善念，也照顾好自己\n\n这句文案真的很戳人的心，一个电影院说出生活如电影般魔幻，就犹如一个人身临其境后的感叹，真实且悲伤。但是这家电影院又在之后写着“心存善念，照顾好自己”，又给悲伤中带来一丝希望，令人动容。\n\n苹果软件公司文案：\n\n你的下一台电脑何必是电脑\n\n苹果的文案真的一如既往的厉害，在中文的翻译里这种“何必”的肯定句式给人当头一棒的感觉。让人忍不住想：对呀，何必呢？之后又让人忍不住去联想那下一台电脑不是电脑又是什么呢？一步步被它吸引。\n\n而在英文的翻译里，一句简单直白的“下一台电脑不是电脑”给人一种未来的期待感和新鲜感。\n\n卖绿豆糕：\n（佳琦）用你的先知先觉启发你的后知后觉让你买得不知不觉\n\n卖汽水：\n辉煌于当下，畅饮到未来\n\n卖热干面：\n不逼自己一把不知道自己还会一字马\n\n卖鱼糕：\n不见鱼的鱼，同样是一种大师的意境\n\n卖凤爪：\n千万不要像关羽大意失荆州一样错失荆州凤爪\n\n卖香菇：\n编钟是来自历史深处的，我们的香菇是来自大山深处的\n\n卖藕带：\n（和莲藕）长大后我就成了你\n吃过的赶紧屯一点，没吃过的赶紧尝尝鲜买一点\n\n卖酒：\n这不仅是酒，这是经验和时光\n\n卖茶：\n茶是人在草木间\n\n卖全部：\n烟笼寒水月笼沙，不止东湖与樱花，门前风景雨来佳，还有莲藕鱼糕玉露茶，米酒香菇小龙虾，赶紧下单买回家，买它买它就买它，热干面和小龙虾。', '积累点创意文案对你总有好处', '47', 'http://cdn.lululuting.com/80b8e290-78b7-11ea-b66e-790e90ecd402', '7', '2020-04-07 18:06:53', '4', '');
INSERT INTO `article` VALUES ('19', '2', '2020 春 邻居菲菲姐', '**拍摄于 2020.01.25 只调了个色，基本无修。\n菲菲姐，大美女哦！**\n\n![avatar](http://cdn.lululuting.com/e43f7e10-78ed-11ea-a318-5d619539e55d)\n\n\n\n![avatar](http://cdn.lululuting.com/f3f7b160-78ed-11ea-a318-5d619539e55d)\n\n\n\n![avatar](http://cdn.lululuting.com/ba2a10d0-78ee-11ea-8e5a-730981938b02)\n\n\n\n[![菲菲姐](http://cdn.lululuting.com/2d69f610-78ee-11ea-a318-5d619539e55d \"菲菲姐\")](http://cdn.lululuting.com/2d69f610-78ee-11ea-a318-5d619539e55d \"菲菲姐\")\n\n\n\n![avatar](http://cdn.lululuting.com/1becba30-78ee-11ea-a318-5d619539e55d)\n\n\n\n![avatar](http://cdn.lululuting.com/42921180-78ee-11ea-a318-5d619539e55d)\n\n\n\n\n\n\n', '笑容是会传染的！', '37', 'http://cdn.lululuting.com/f1de1e90-794d-11ea-af86-43cba2b548a3', '6', '2020-04-08 00:40:57', '1', '人像摄影,2020春');
INSERT INTO `article` VALUES ('20', '2', '来，感受一下延迟摄影的魅力', '**什么都别说，先看个东西！**\n<iframe src=\"//player.bilibili.com/player.html?aid=69258653&bvid=BV1UE41197LP&cid=120033702&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\niframe画质有点渣，更好的体验请看原版\n\n[高清无码](https://www.bilibili.com/video/BV1UE41197LP \"高清无码\")\n\n是不是很震撼？想不想学？\n\n少年，我看你骨骼精奇，是万中无一的武学奇才，维护世界和平就靠你了，我这有本秘籍--->`《延时摄影入门》`，见与你有缘，就`免费`送给你啦！\n\n# 什么叫延迟摄影？\n延时摄影（Time-lapse photography），又叫缩时摄影、缩时录影，是以一种将时间压缩的拍摄技术，目前也多叫作缩时录影。其拍摄的是一组照片或是视频，后期通过照片串联或是视频抽帧，把几分钟、几小时甚至是几天几年的过程压缩在一个较短的时间内以`视频`的方式播放。在一段延时摄影视频中，物体或者景物缓慢变化的过程被`压缩`到一个较短的时间内，呈现出平时用肉眼无法察觉的奇异精彩的景象。\n延时摄影可以认为是和高速摄影相反的一个过程。\n延时摄影通常应用在拍摄城市风光、自然风景、天文现象、城市生活、建筑制造、生物演变等题材上。而目前除了相机外，手机、行车记录仪也有此功能。\n\n没有相机的小伙伴，不要灰心，抓重点 `手机`，手机也可以玩。\n\n\n**拍摄延时有俩种方法：**\n\n1. 进行长时间的视频录制，然后后期进行加速。非常简单粗暴，理论上也是可以的，但是一般不是用这种方法的。长时间录制的文件太大了，然后相机电池也撑不住。\n2. 另一种是利用相机自带的延时拍摄功能进行拍摄或者是使用`快门线`拍摄，后期再通过照片合成视频。\n\n**原理：**\n视频时长最小计量单位是`帧`，电影、电视的播放速度是`1秒=24帧`，也就是说播放时长10秒钟，每一秒就需要拍24张照片来得到流畅的正常播放。那么10秒钟就需要拍10*24=240张照片。不过24也`不是固定的`，你还可以选25/30/60帧/秒看你后期合成的制式，不过低于24会感觉到卡，也就是掉帧。\n\n\n**拍摄延时也有很多类型的：**\n类型有很多，只说常见的。\n\n1. 定机位延迟（三脚架）\n2. 移动延迟（电动滑轨）\n3. 大范围移动延迟（三脚架手动/稳定器手动）\n\n**注意一点**\n\n- 延时摄影的场景要选择“变化、移动、动态”动静结合的景与物，如果拍摄场景不具有动态与变化，拍摄出来的延时摄影就没有意义。\n\n\n# 前期准备\n\n1. 相机（废话）\n2. 一块充满电的电池（拍着拍着，没电可不行哦）\n3. 三脚架（必须的）\n4. 提前踩点，提前去取景地占领有利机位，机位好什么都好。\n5. 选对时间，拍摄风光建筑这类题材，要选择黄金时间段进行拍摄（日出日落前后一小时，光线柔和、色彩绚丽）。\n6. 内存卡记得留够空间\n7. 一袋瓜子（延迟摄影动辄几十分钟，手机记得充满，不然你会很无聊！）\n\n# 参数设置 （重点）\n1. 使用`M档`拍摄（光线变化大A档，如日转夜延迟）\n2. `手动对焦`（手动对焦避免拉风箱）\n3. `自定义`白平衡（避免光线变化造成照片风格不统一）\n4. `低`ISO（根据实际情况，越清晰越好）\n5. `小`光圈 （延时摄影拍摄的都是大场景，要求所拍摄的画面要尽可能的全部都清晰，因此就需要选择F8-F16的小光圈来拍摄大景深的画面）\n6. `适合`的快门（看情况，一般设1/50。1/50接近人眼的观察习惯，拍摄延时选择比1/50秒快门速度快的快门速度，会导致画面中运动的物体过于清晰而造成一种奇怪的视觉感受。但拍车流拍拉丝这种模糊运动的场景就需要慢快门）\n7. 选择`RAW`格式（JPG不是不可以，但RAW宽容度更好）\n8. **快门间隔**\n这个是没有标准的，看你自己想要什么效果，说说一般配置\n\n- 拍云雾流动 10s\n- 拍星空星轨 30s（考虑到银河转动和地球自转，拍星空星轨参数有点复杂不一定是30s）\n- 拍车流 3s\n\n\n\n# 拍摄途中\n\n1. 一定要保证机位不动！一定要保证机位不动! 一定要保证机位不动! 一点点移动都会保证让你前功尽弃。通过后期裁剪增稳来矫正移位是不现实的，所以要靠前期避免。\n2. 拍着拍着没电了? 没电就轻手轻脚上充电宝。什么？不支持充电？打扰了。。。\n3. 开始拍摄后，一切由相机自动完成，关掉屏幕省电。\n\n\n# 后期合成\n**篇幅有限，后期合成请看这个视频，讲的是日转夜，但是后期合成这部分操作是通用的**\n\n<iframe src=\"//player.bilibili.com/player.html?aid=26124237&bvid=BV1Ls411V7YQ&cid=44807569&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n\n\n\n\n\n\n\n\n', '延迟摄影教学', '85', 'http://cdn.lululuting.com/51ac9110-79a5-11ea-8bf8-59ff755a6a12', '0', '2020-04-08 22:29:14', '1', '摄影,教学,干货');
INSERT INTO `article` VALUES ('21', '3', '2020 目标计划', '我是个没计划没目标的人，做什么事情就只是在脑中先梳理一遍然后就去实施了，并且信奉`计划赶不上变化`把制定计划目标看作是`形式主义`。但是看着有目标有计划的同事，在完成了他们一件件小目标分享他们的喜悦时，我感觉我就是在虚度光阴！或许我应该反思一下过去的思想是否正确。\n\n2020已过`3/1`, 回头看看2019，感觉很迷茫，嘻嘻哈哈也不知道做了些啥，时间就这样过去了~\n行吧，凡事预则立,不预则废。现在规划一下也不不是很晚，给自己立些flag吧，都不是硬性的，但起码有个方向！\n\n\n**人若有志,万事可为！不能再当咸鱼啦！加油！**\n\n# 立flag！！！\n\n## 工作上\n\n1. 学习一下`typescript`,不一定会用，看看了解一下是什么东西，撸几个demo！\n2. 学习`Flutter`,并且用flutter做出一款app应用！\n3. 重新拾起`vue`，跟紧市场的步伐！\n4. `Python`,今年一定要好好学一下python，做几个有趣的东西，如果可以的话就用Python重构一下后台吧！\n5.	学`AE`，做个片头！！！\n\n## 生活上\n1. 希望今年可以`找个女朋友` ！！！（重中之重）\n2. `减肥`，控制住！！！，不能再胖了！！！\n3. 不乱买东西了，存钱！\n4. ~~如果有时间，学多一门乐器！~~（应该是没时间）\n5. 弄个本科证\n6. ~~考驾照~~（算了，上车就想睡觉的人不适合开车）\n7. 用视频记录生活，拍的素材不要藏了，拿出来剪吧！\n\n------------\n\n以上flag 2020/4/16 立，不做修改。\n\n`2021` 回来看看能完成多少项！！！\n', '立此为据，努力学习！', '65', 'http://cdn.lululuting.com/9b33bf00-7ffb-11ea-8994-617ff2232874', '2', '2020-04-16 17:49:03', '1', '学习计划,可能是吹牛');
INSERT INTO `article` VALUES ('23', '1', '前端应该如何提升自己的设计感！', '“前端为什么要学设计？傻了吧？”\n\n![avatar](http://cdn.lululuting.com/23752170-8578-11ea-a2ca-a5629de233e0)\n\n应该很多人会这么问吧。对于现在 `ui出稿 -> 前端切图` 这种工作流确实没有必要学。但不知道大家有没有上过那种网站。千篇一律的“极速模式”，杂乱无章的小广告，细到点不到的按钮，各种被劫持注入的小广告， 简直毫无用户体验可言，难用到每次逛完就顺手点个举报！\n改变这种现状，是每个前端都应该肩负的责任！\n\n话说回来，作为一个切图仔，如果连个ps都不会玩又怎么行？改个小图标，切个小图事事都要麻烦ui妹子，又怎么好意思呢？作为一个有理想有抱负的切图仔，目标不单单是全栈，而且是要全干！\n来吧，兄弟们干就完了，奥力给！\n\n**还是那句老话，本人学识有限 文章多有不足，若有错误 请大方指出 以免误导他人**\n\n# 多看\n大家都知道培养美感，首先得多看美的东西。\n那看什么呢？看一些优秀的网站，看一些好看的图片，就连看一部好电影都是有提升的。看多了，辨别美丑的能力就有了，知道美丑了就可以帮助到你分辨出作品的优劣，找到正确的方向。\n\n**下面分享一些好东西：**\n## [优设网 ](https://www.uisdc.com/ \"优设网 \")\n![avatar](http://cdn.lululuting.com/6858b7a0-85de-11ea-ba9c-2528dd8e6844)\n优设是国内极具人气的设计师平台优教程网。旗下的微博@优秀网页设计、微信公众号@优秀网页设计。\n是不是很熟悉，挺哥博客很很大一部分就是模仿这个网站的。优设是干货王平台，每天微博都刷一下，都能学到很多的！\n\n\n## [JQ插件库](http://www.jq22.com/ \"JQ插件库\")\n![avatar](http://cdn.lululuting.com/b6d110d0-85de-11ea-ba9c-2528dd8e6844)\n虽然2020年了，我们逐渐开始抛弃jq这个曾经的王者。不可否认,你大爷还是你大爷，jq还是现在生态最成熟最全的框架。\n这个网站上有大量的精美模板和动画组件，设计设计，设计出来的东西要是实现不了，那也是瞎扯。这些都经过前人`实践过并且可行`已实现的方案。\n站在巨人的肩膀上看，会看的更远！\n\n# 多思考\n除了看，还得多思考。\n\n1. 站在用户的角度思考，思考如果你是用户，你会喜欢怎么样的网站，怎么样的排版和布局，怎么样的网站色调。\n2. 站在产品的角度思考，思考网站本身是怎样的一个定位。受众是那些，分析受众人群的爱好。迎合他们。\n\n# 多练习\n看的再多，如果没有加以练习也是不行的。\n对于ui来说，练习就是多做图，但对于我们前端来讲 练习就是多开新坑多做项目。只有多切图，多做项目，才会有提升。\n这里也分享一个做图的工具：\n## [稿定设计](https://www.gaoding.com/ \"稿定设计\")\n![avatar](http://cdn.lululuting.com/894a6510-85f4-11ea-a233-ad20d0b5a0ab)\n解放生产力！干翻ui就靠它了！但是不是免费的，需要氪的金哈哈哈!\n\n# 多培养兴趣爱好\n培养美感提升显著的爱好一般有：\n1.绘画\n2.摄影\n3.乐器\n有空就挑一个玩玩吧。\n\n待续...nen', '不想当设计的前端不是好前端！', '82', 'http://cdn.lululuting.com/2b30d8e0-8579-11ea-b971-0906423746e5', '1', '2020-04-23 00:18:59', '1', '经验分享,干翻UI');

-- ----------------------------
-- Table structure for articlelike
-- ----------------------------
DROP TABLE IF EXISTS `articlelike`;
CREATE TABLE `articlelike` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userId` int(11) NOT NULL,
  `articleId` int(11) NOT NULL,
  `status` enum('1','0') COLLATE utf8_unicode_ci NOT NULL DEFAULT '1' COMMENT '1已点赞 0已取消',
  `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of articlelike
-- ----------------------------
INSERT INTO `articlelike` VALUES ('2', '1', '23', '1', '2020-05-17 20:23:56');
INSERT INTO `articlelike` VALUES ('3', '2', '23', '0', '2020-05-14 13:39:24');
INSERT INTO `articlelike` VALUES ('4', '16', '23', '1', '2020-05-14 13:55:27');
INSERT INTO `articlelike` VALUES ('5', '1', '8', '1', '2020-05-17 21:02:59');
INSERT INTO `articlelike` VALUES ('6', '1', '21', '0', '2020-05-17 21:03:04');

-- ----------------------------
-- Table structure for banner
-- ----------------------------
DROP TABLE IF EXISTS `banner`;
CREATE TABLE `banner` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `url` varchar(255) NOT NULL,
  `link` varchar(255) NOT NULL,
  `status` enum('0','1') NOT NULL DEFAULT '1' COMMENT '1, 正常 2，下架',
  `title` varchar(255) NOT NULL,
  `userId` int(11) NOT NULL DEFAULT '0',
  `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `type` enum('3','2','1','4','5','7','6') DEFAULT '1' COMMENT '1轮播，2推荐，3广告，4首页时图，5列表页时图，6详情页时图，7搜索时图',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=46 DEFAULT CHARSET=utf8 COMMENT='轮播大图 封面';

-- ----------------------------
-- Records of banner
-- ----------------------------
INSERT INTO `banner` VALUES ('20', 'http://cdn.lululuting.com/388aa5e0-7fff-11ea-8994-617ff2232874', '123123', '1', '详情页头部', '1', '2020-01-29 18:32:17', '6');
INSERT INTO `banner` VALUES ('36', 'http://cdn.lululuting.com/7af28280-65de-11ea-9951-f3da136c56eb', 'http://lululuting.com/detail?id=19', '1', '邻居菲菲姐', '1', '2020-03-07 19:14:49', '1');
INSERT INTO `banner` VALUES ('37', 'http://cdn.lululuting.com/7e649ed0-65de-11ea-9951-f3da136c56eb', '123123', '1', '延迟摄影教学', '1', '2020-03-07 19:48:35', '1');
INSERT INTO `banner` VALUES ('38', 'http://cdn.lululuting.com/8bfd7490-65de-11ea-9951-f3da136c56eb', '123123', '0', '母亲节', '1', '2020-03-07 19:48:56', '1');
INSERT INTO `banner` VALUES ('40', 'http://cdn.lululuting.com/54fc4840-7ffb-11ea-8994-617ff2232874', 'http://lululuting.com/detail?id=21', '1', '2020 学习计划', '1', '2020-03-07 20:15:58', '2');
INSERT INTO `banner` VALUES ('29', 'http://cdn.lululuting.com/23f28e10-8002-11ea-8994-617ff2232874', 'http://lululuting.com', '1', '测试广告1', '1', '2020-02-14 20:59:32', '3');
INSERT INTO `banner` VALUES ('39', 'http://cdn.lululuting.com/4a2e3c30-8004-11ea-8994-617ff2232874', 'https://voice.baidu.com/act/newpneumonia/newpneumonia/?from=osari_pc_3', '1', '最新疫情', '1', '2020-03-07 20:15:32', '2');
INSERT INTO `banner` VALUES ('31', 'http://cdn.lululuting.com/e98631f0-8001-11ea-8994-617ff2232874', 'http://lululuting.com', '1', '列表页顶部', '1', '2020-02-14 21:01:48', '5');
INSERT INTO `banner` VALUES ('32', 'http://cdn.lululuting.com/f720b460-6531-11ea-9ef1-793305692a81', 'http://lululuting.com', '1', 'react笔记', '1', '2020-02-15 22:20:38', '1');
INSERT INTO `banner` VALUES ('33', 'http://cdn.lululuting.com/fdd50360-6531-11ea-9ef1-793305692a81', 'wu', '0', '01', '1', '2020-02-23 11:32:22', '4');
INSERT INTO `banner` VALUES ('34', 'http://cdn.lululuting.com/d41b8a00-65fc-11ea-83c8-3341d06ec4a1', '无', '0', '春风十里不如你', '1', '2020-02-23 11:50:39', '4');
INSERT INTO `banner` VALUES ('41', 'http://cdn.lululuting.com/c0621470-8000-11ea-8994-617ff2232874', '123123', '1', '搜索页', '1', '2020-03-22 15:14:32', '7');
INSERT INTO `banner` VALUES ('42', 'http://cdn.lululuting.com/bd2c7e10-754e-11ea-b55b-676576cb2c32', 'http://lululuting.com', '0', '清明', '1', '2020-04-03 09:59:23', '4');
INSERT INTO `banner` VALUES ('43', 'http://cdn.lululuting.com/65de81a0-7fc4-11ea-8fa4-534c8be40db2', 'http://lululuting.com', '0', '2020 4月 ', '1', '2020-04-16 17:12:35', '4');
INSERT INTO `banner` VALUES ('44', 'http://cdn.lululuting.com/a232c280-7fc2-11ea-8fa4-534c8be40db2', 'http://lululuting.com', '0', '致敬阿sir', '1', '2020-04-16 17:14:11', '4');
INSERT INTO `banner` VALUES ('45', 'http://cdn.lululuting.com/f0ff0590-85f8-11ea-9290-1df8672a5ecd', '无', '1', '五一劳动节快乐', '1', '2020-04-24 14:58:02', '4');

-- ----------------------------
-- Table structure for clicklike
-- ----------------------------
DROP TABLE IF EXISTS `clicklike`;
CREATE TABLE `clicklike` (
  `id` int(11) NOT NULL,
  `userId` int(11) DEFAULT NULL,
  `articleId` int(11) DEFAULT NULL,
  `status` enum('1','0') COLLATE utf8_unicode_ci DEFAULT '1' COMMENT '1已点赞 0已取消',
  `createTime` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of clicklike
-- ----------------------------

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `content` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT '评论内容',
  `userId` int(11) DEFAULT NULL COMMENT '用户id',
  `pid` int(11) DEFAULT NULL COMMENT '回复id',
  `createTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '创建时间',
  `articleId` int(11) DEFAULT NULL COMMENT '文章id',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=126 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of comment
-- ----------------------------
INSERT INTO `comment` VALUES ('125', '6', '1', null, '2020-05-15 15:43:04', '20');
INSERT INTO `comment` VALUES ('124', '自己留', '1', null, '2020-05-13 18:46:18', '23');
INSERT INTO `comment` VALUES ('123', '66', '2', '122', '2020-05-13 13:45:29', '23');
INSERT INTO `comment` VALUES ('122', '哈哈', '1', '121', '2020-05-13 13:45:12', '23');
INSERT INTO `comment` VALUES ('121', '前排', '2', null, '2020-05-13 13:44:53', '23');

-- ----------------------------
-- Table structure for commentlike
-- ----------------------------
DROP TABLE IF EXISTS `commentlike`;
CREATE TABLE `commentlike` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `commentId` int(11) DEFAULT NULL,
  `userId` int(11) DEFAULT NULL,
  `createTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `status` enum('1','0') COLLATE utf8_unicode_ci DEFAULT '1' COMMENT '状态 0 取消， 1点赞',
  `articleId` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=44 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of commentlike
-- ----------------------------
INSERT INTO `commentlike` VALUES ('43', '102', '2', '2020-05-11 19:35:43', '1', '23');
INSERT INTO `commentlike` VALUES ('42', '100', '2', '2020-05-11 19:26:36', '1', '23');
INSERT INTO `commentlike` VALUES ('41', '98', '2', '2020-05-11 19:04:02', '1', '23');
INSERT INTO `commentlike` VALUES ('40', '96', '2', '2020-05-11 19:03:32', '1', '23');
INSERT INTO `commentlike` VALUES ('39', '95', '2', '2020-05-11 19:03:31', '1', '23');
INSERT INTO `commentlike` VALUES ('38', '96', '16', '2020-05-11 19:03:17', '1', '23');
INSERT INTO `commentlike` VALUES ('37', '95', '16', '2020-05-11 19:03:16', '1', '23');
INSERT INTO `commentlike` VALUES ('36', '87', '16', '2020-05-11 18:54:14', '1', '23');
INSERT INTO `commentlike` VALUES ('35', '87', '2', '2020-05-11 18:53:52', '1', '23');
INSERT INTO `commentlike` VALUES ('34', '64', '2', '2020-05-11 17:55:50', '1', '23');
INSERT INTO `commentlike` VALUES ('33', '63', '1', '2020-05-11 14:43:22', '1', '23');

-- ----------------------------
-- Table structure for contact
-- ----------------------------
DROP TABLE IF EXISTS `contact`;
CREATE TABLE `contact` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `type` enum('wx','qq','github','weibo','bilibili') NOT NULL,
  `link` varchar(255) DEFAULT NULL,
  `code` varchar(255) DEFAULT NULL,
  `userId` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of contact
-- ----------------------------
INSERT INTO `contact` VALUES ('4', 'weibo', 'https://weibo.com/3741013945/profile?topnav=1&wvr=6', null, '1');
INSERT INTO `contact` VALUES ('5', 'bilibili', 'https://space.bilibili.com/6489557?spm_id_from=333.334.b_62696c692d6865616465722d6d.8', 'http://cdn.lululuting.com/3dfc5a60-6532-11ea-9ef1-793305692a81', '1');
INSERT INTO `contact` VALUES ('6', 'github', 'https://github.com/lululuting', null, '1');
INSERT INTO `contact` VALUES ('9', 'qq', '1824849120', null, '2');
INSERT INTO `contact` VALUES ('10', 'wx', null, null, '4');

-- ----------------------------
-- Table structure for fans
-- ----------------------------
DROP TABLE IF EXISTS `fans`;
CREATE TABLE `fans` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userId` int(11) DEFAULT NULL,
  `createTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `fansId` int(11) DEFAULT NULL,
  `status` enum('1','0') COLLATE utf8_unicode_ci DEFAULT '0' COMMENT '0 关注 1取消关注 默认0',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=17 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of fans
-- ----------------------------
INSERT INTO `fans` VALUES ('16', '2', '2020-05-15 11:12:45', '1', '0');
INSERT INTO `fans` VALUES ('15', '1', '2020-05-14 16:33:55', '2', '0');
INSERT INTO `fans` VALUES ('14', '1', '2020-05-14 14:19:16', '16', '0');

-- ----------------------------
-- Table structure for feedback
-- ----------------------------
DROP TABLE IF EXISTS `feedback`;
CREATE TABLE `feedback` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT '',
  `description` varchar(255) DEFAULT NULL,
  `contact` varchar(255) DEFAULT NULL,
  `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of feedback
-- ----------------------------
INSERT INTO `feedback` VALUES ('15', '希望能与大佬们互相交流一下', '本人博客 http://www.jsfan.net/\n联系方式无法添加', 'QQ: 907985037', '2020-04-15 12:57:25');

-- ----------------------------
-- Table structure for msg
-- ----------------------------
DROP TABLE IF EXISTS `msg`;
CREATE TABLE `msg` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `type` enum('4','3','2','5','6','1') COLLATE utf8_unicode_ci NOT NULL DEFAULT '1' COMMENT '1评论 2回复评论  3点赞文章 4点赞评论 5粉丝关注 6系统通知',
  `userId` int(11) NOT NULL,
  `content` text COLLATE utf8_unicode_ci COMMENT '内容，收藏评论点赞的文章或者评论位置',
  `createTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `status` enum('1','2','0') COLLATE utf8_unicode_ci NOT NULL DEFAULT '0' COMMENT '0 未读 1已读 2删除',
  `callUserId` int(11) DEFAULT NULL,
  `source` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT '出处  即文章封面或者评论内容',
  `sourceId` int(11) NOT NULL COMMENT '出处id 即文章id或者用户id',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=65 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of msg
-- ----------------------------
INSERT INTO `msg` VALUES ('59', '2', '1', '哈哈', '2020-05-14 13:39:29', '1', '2', '前排', '23');
INSERT INTO `msg` VALUES ('60', '2', '2', '66', '2020-05-13 15:52:48', '1', '1', '哈哈', '23');
INSERT INTO `msg` VALUES ('58', '1', '2', '前排', '2020-05-13 15:52:48', '1', '1', 'http://cdn.lululuting.com/2b30d8e0-8579-11ea-b971-0906423746e5', '23');
INSERT INTO `msg` VALUES ('62', '5', '16', null, '2020-05-14 14:20:19', '1', '1', null, '16');
INSERT INTO `msg` VALUES ('63', '5', '2', null, '2020-05-14 18:28:52', '1', '1', null, '2');
INSERT INTO `msg` VALUES ('64', '5', '1', null, '2020-05-15 11:12:45', '0', '2', null, '1');

-- ----------------------------
-- Table structure for type
-- ----------------------------
DROP TABLE IF EXISTS `type`;
CREATE TABLE `type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `typeName` varchar(255) NOT NULL DEFAULT '',
  `orderNum` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='类型表';

-- ----------------------------
-- Records of type
-- ----------------------------
INSERT INTO `type` VALUES ('1', '技术', '0');
INSERT INTO `type` VALUES ('2', '摄影', '1');
INSERT INTO `type` VALUES ('3', '生活', '2');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'key',
  `userName` varchar(255) NOT NULL DEFAULT 'admin' COMMENT '昵称',
  `password` varchar(255) DEFAULT '123456' COMMENT '密码',
  `avatar` varchar(255) NOT NULL DEFAULT 'https://gw.alipayobjects.com/zos/antfincdn/XAosXuNZyF/BiazfanxmamNRoxxVxka.png' COMMENT '头像',
  `autograph` varchar(255) DEFAULT NULL COMMENT '个性签名',
  `post` varchar(255) DEFAULT '无业游民' COMMENT '职业',
  `address` varchar(255) DEFAULT NULL COMMENT '地址',
  `tags` varchar(255) DEFAULT NULL COMMENT '标签',
  `mobile` varchar(11) DEFAULT NULL COMMENT '手机号',
  `wxReward` varchar(255) DEFAULT NULL COMMENT '微信赞赏码',
  `zfbReward` varchar(255) DEFAULT NULL COMMENT '支付宝赞赏码',
  `cover` varchar(255) NOT NULL DEFAULT 'http://cdn.lululuting.com/ebe15f00-6531-11ea-9ef1-793305692a81' COMMENT '用户中心封面',
  `wbUid` varchar(11) DEFAULT NULL COMMENT '微博用户唯一uid',
  `auth` enum('1','0') DEFAULT '0' COMMENT '是否内部博主 0 不是 1是',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=17 DEFAULT CHARSET=utf8 COMMENT='用户表';

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('1', 'TingGe', '$2a$10$UdL/5JK1boL/YrnbEsMcRee8jNOK909nqUDq5ObvhAKKKamuOl/fm', 'http://cdn.lululuting.com/23556340-71d6-11ea-9ba6-fdf6f3c40acb', '忘了他，我偷电瓶养你', '前端切图仔', '广东广州', '靓仔,肥宅,强迫症患者,色影师', '18148770321', 'http://cdn.lululuting.com//2d7f0250-6532-11ea-9ef1-793305692a81', 'http://cdn.lululuting.com/337b4bf0-6532-11ea-9ef1-793305692a81', 'http://cdn.lululuting.com/ebe15f00-6531-11ea-9ef1-793305692a81', '', '1');
INSERT INTO `user` VALUES ('2', 'TingGe', '$2a$10$ouyBweiOSOd7ifjhLYA7s.IFL4LtppcybkD0yn/Pup0rX9OAvkU62', 'http://cdn.lululuting.com/534307a0-65b1-11ea-b9df-855300eae66c', '忘了他，我偷电瓶养你', '自由职业者', '河南周口', '美食,运动', '18790937595', '', '', 'http://cdn.lululuting.com/ebe15f00-6531-11ea-9ef1-793305692a81', '', '1');
INSERT INTO `user` VALUES ('3', '独钓寒江雪', '$2a$10$ouyBweiOSOd7ifjhLYA7s.IFL4LtppcybkD0yn/Pup0rX9OAvkU62', 'https://gw.alipayobjects.com/zos/antfincdn/XAosXuNZyF/BiazfanxmamNRoxxVxka.png', '我是小新', '无业游民', '河北邢台', '美女,可爱', '15832991954', null, null, 'http://cdn.lululuting.com/ebe15f00-6531-11ea-9ef1-793305692a81', '', '1');
INSERT INTO `user` VALUES ('4', 'admin', '$2a$10$ouyBweiOSOd7ifjhLYA7s.IFL4LtppcybkD0yn/Pup0rX9OAvkU62', 'http://cdn.lululuting.com/3e5e6e20-6fd3-11ea-b28f-8174f7ecc617', null, '无业游民', null, '旅游,文案,运营,医学', '18407579655', null, null, 'http://cdn.lululuting.com/ebe15f00-6531-11ea-9ef1-793305692a81', '', '1');
INSERT INTO `user` VALUES ('5', '91黄先生', '$2a$10$ouyBweiOSOd7ifjhLYA7s.IFL4LtppcybkD0yn/Pup0rX9OAvkU62', 'https://gw.alipayobjects.com/zos/antfincdn/XAosXuNZyF/BiazfanxmamNRoxxVxka.png', null, '无业游民', null, null, '18776038733', null, null, 'http://cdn.lululuting.com/ebe15f00-6531-11ea-9ef1-793305692a81', '', '1');
INSERT INTO `user` VALUES ('16', '某一热心网友', '$2a$10$ouyBweiOSOd7ifjhLYA7s.IFL4LtppcybkD0yn/Pup0rX9OAvkU62', 'https://tvax3.sinaimg.cn/crop.0.0.996.996.50/defb57b9ly8fekptoo8hdj20ro0roq5b.jpg?KID=imgbed,tva&Expires=1587991289&ssig=Axm94%2FE2%2Fj', '标准肥宅 中二码农11', '无业游民', '广东 广州', null, null, null, null, 'http://cdn.lululuting.com/ebe15f00-6531-11ea-9ef1-793305692a81', '3741013945', '0');
